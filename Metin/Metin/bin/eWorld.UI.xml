<?xml version="1.0"?>
<doc>
    <assembly>
        <name>eWorld.UI</name>
    </assembly>
    <members>
        <member name="T:eWorld.UI.AccordionPanel">
            <summary>
            The AccordionPanel extends the functionality of the <see cref="T:eWorld.UI.CollapsablePanel"/> control allowing
            all AccordionPanel controls to be linked together.  This will create an effect on a webpage where any other
            AccordionPanel contained on the webpage will be collapsed when one is expanded.  A great example of this, is
            the Outlook sidebar, in which you have multiple panels that are collapsed once a new one is selected.
            </summary>
            <example>
            <code><![CDATA[
            <%@ Register TagPrefix="eworld" Assembly="eWorld.UI, Version=1.9.0.0, Culture=neutral, PublicKeyToken=24d65337282035f2" Namespace="eWorld.UI" %>
            <html>
            <head>
            </head>
            <body>
            	<form runat="server">
            		<ew:AccordionPanel id="AccordionPanel1" runat="server" TitleText="The Title for 1!" AllowTitleExpandCollapse="False">
            			Textbox 1: <asp:TextBox runat=server / >
            		</ ew:AccordionPanel>
            		<ew:AccordionPanel id="AccordionPanel2" runat="server" TitleText="The Title for 2!" AllowTitleExpandCollapse="False">
            			Textbox 2:<asp:TextBox runat=server / >
            		</ ew:AccordionPanel>
            	</form>
            </body>
            </html>
            ]]></code>
            </example>
        </member>
        <member name="T:eWorld.UI.CollapsablePanel">
            <summary>
            The Collapsable Panel control is an easy to use, multi-browser control that will
            allow you to easily add a panel that can be collapsed completely through client code.
            On DHTML enabled browsers, the control will display either a link or images (depending on
            what you supply) that will allow the user to expand or collapse the content of the panel.  
            In non DHTML enabled browsers, they will see the expanded version with no option to collapse.
            </summary>
            <remarks>
            Use the <b>Collapsable Panel</b> control to display a collapsable type panel on a webpage
            using Javascript and DHTML.  There are no limitations on what you can add to the Content
            template.  Currently, there is design time output, but nothing works... I have yet to figure
            that out.
            </remarks>
            <example>
            <code><![CDATA[
            <%@ Register TagPrefix="eworld" Assembly="eWorld.UI, Version=1.9.0.0, Culture=neutral, PublicKeyToken=24d65337282035f2" Namespace="eWorld.UI" %>
            <html>
            <head>
            </head>
            <body>
            	<form runat="server">
            		<ew:CollapsablePanel id="collapsablePanel1" runat="server" TitleText="The Title!" AllowTitleExpandCollapse="False">
            			<asp:TextBox runat=server / >
            		</ ew:CollapsablePanel>
            	</form>
            </body>
            </html>
            ]]></code>
            </example>
        </member>
        <member name="M:eWorld.UI.CollapsablePanel.#ctor">
            <summary>
            Instantiates a new instance of the Collapsable Panel control
            </summary>
        </member>
        <member name="M:eWorld.UI.CollapsablePanel.OnInit(System.EventArgs)">
            <summary>
            Overrides <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)"/>
            </summary>
        </member>
        <member name="M:eWorld.UI.CollapsablePanel.CreateChildControls">
            <summary>
            Overrides <see cref="M:System.Web.UI.Control.CreateChildControls"/>
            </summary>
        </member>
        <member name="M:eWorld.UI.CollapsablePanel.OnPreRender(System.EventArgs)">
            <summary>
            Overrides <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)"/>. 
            </summary>
        </member>
        <member name="M:eWorld.UI.CollapsablePanel.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Overrides <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)"/>.  This performs the logic to display
            the collapsable panel properly to the browser and settings.
            </summary>
        </member>
        <member name="M:eWorld.UI.CollapsablePanel.LoadViewState(System.Object)">
            <summary>
            Overrides System.Web.UI.Panel.LoadViewState
            </summary>
        </member>
        <member name="M:eWorld.UI.CollapsablePanel.SaveViewState">
            <summary>
            Overrides System.Web.UI.Panel.SaveViewState
            </summary>
        </member>
        <member name="M:eWorld.UI.CollapsablePanel.TrackViewState">
            <summary>
            Overrides System.Web.UI.TrackViewState
            </summary>
        </member>
        <member name="M:eWorld.UI.CollapsablePanel.TableStyle(System.Web.UI.WebControls.Style,System.Boolean@)">
            <summary>
            Builds the style for use with the control.
            </summary>
            <param name="inStyle">The style to be built.</param>
            <param name="isCssClass">Value indicating if the generated style is a css class instead of pure style.</param>
            <returns>The generated style attributes.</returns>
        </member>
        <member name="P:eWorld.UI.CollapsablePanel.Collapsed">
            <summary>
            Gets and Sets whether or not the Collapsable Panel is currently collapsed.
            </summary>
        </member>
        <member name="P:eWorld.UI.CollapsablePanel.Collapsable">
            <summary>
            Gets and Sets whether or not the Collapsable Panel can be collapsed.
            </summary>
        </member>
        <member name="P:eWorld.UI.CollapsablePanel.ExpandText">
            <summary>
            Gets and sets the text to be displayed in the hyperlink when the panel is collapsed.
            </summary>
        </member>
        <member name="P:eWorld.UI.CollapsablePanel.CollapseText">
            <summary>
            Gets and sets the text to be displayed in the hyperlink when the panel is expanded.
            </summary>
        </member>
        <member name="P:eWorld.UI.CollapsablePanel.ExpandImageUrl">
            <summary>
            Gets and sets the image url to be used for the expanded image when the panel is collapsed.
            </summary>
        </member>
        <member name="P:eWorld.UI.CollapsablePanel.CollapseImageUrl">
            <summary>
            Gets and sets the image url to be used for the collapsed image when the panel is expanded.
            </summary>
        </member>
        <member name="P:eWorld.UI.CollapsablePanel.TitleText">
            <summary>
            Gets and sets the text of the title.
            </summary>
        </member>
        <member name="P:eWorld.UI.CollapsablePanel.TitleStyle">
            <summary>
            Gets and sets the style for the title table row of the panel.
            </summary>
        </member>
        <member name="P:eWorld.UI.CollapsablePanel.TitleLinkStyle">
            <summary>
            Gets and sets the style for the title link of the panel.
            </summary>
        </member>
        <member name="P:eWorld.UI.CollapsablePanel.CollapsedTitleStyle">
            <summary>
            Gets and Sets the style for the title table row of the panel when collapsed.
            </summary>
            <remarks>
            If this property is not set, it uses the <see cref="P:eWorld.UI.CollapsablePanel.TitleStyle"/>
            </remarks>
        </member>
        <member name="P:eWorld.UI.CollapsablePanel.AllowTitleExpandCollapse">
            <summary>
            Gets and sets a value indicating if the title text will expand and collapse the content.
            </summary>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:eWorld.UI.CollapsablePanel.ShowLinkOrImage">
            <summary>
            Gets and sets a value indicating if the expand/collapse link or image is displayed.
            </summary>
        </member>
        <member name="P:eWorld.UI.CollapsablePanel.AllowTitleRowExpandCollapse">
            <summary>
            Gets and sets a value indicating if the entire title table row will expand and collapse the content.
            </summary>
        </member>
        <member name="P:eWorld.UI.CollapsablePanel.CollapserAlign">
            <summary>
            Gets and sets a value indicating the location of the collapser.
            </summary>
        </member>
        <member name="P:eWorld.UI.CollapsablePanel.TitleStyleContainerMode">
            <summary>
            Gets and Sets the title style container mode in which the title style is applied.
            </summary>
        </member>
        <member name="P:eWorld.UI.CollapsablePanel.UseExternalResource">
            <summary>
            Gets and Sets a value indicating if the external resource javascript file is used instead of inline Javascript.
            </summary>
        </member>
        <member name="P:eWorld.UI.CollapsablePanel.ExternalResourcePath">
            <summary>
            Gets and Sets the path to the external resource javascript file.
            </summary>
        </member>
        <member name="P:eWorld.UI.CollapsablePanel.AllowSliding">
            <summary>
            Gets and Sets a value indicating if the panels will slide upon expand or collapse in Internet Explorer.
            </summary>
        </member>
        <member name="P:eWorld.UI.CollapsablePanel.SlideSpeed">
            <summary>
            Gets and Sets a value indicating the speed of the panel sliding.
            </summary>
        </member>
        <member name="P:eWorld.UI.CollapsablePanel.SlideLines">
            <summary>
            Gets and Sets a value indicating the number of pixel lines that are increased/decreased when a panel is sliding.
            </summary>
        </member>
        <member name="P:eWorld.UI.CollapsablePanel.JavascriptOnToggleFunction">
            <summary>
            Gets and Sets the javascript function to call whenever it is toggled.
            </summary>
            <remarks>
            The javascript function you create must accept two parameters, where the first one is of type string and is the control being toggled.  The second parameter is of type boolean, and it is a value indicating if the control was collapsed.
            </remarks>
        </member>
        <member name="P:eWorld.UI.CollapsablePanel.TitleSpacer">
            <summary>
            Gets and Sets the spacer that is applied when CollapserAlign=Left.  Can be any text, including HTML.
            </summary>
        </member>
        <member name="P:eWorld.UI.CollapsablePanel.TitleVerticalAlignment">
            <summary>
            Gets and Sets the vertical alignment for the title text cell.
            </summary>
        </member>
        <member name="P:eWorld.UI.CollapsablePanel.Width">
            <summary>
            Overrides <see cref="P:System.Web.UI.WebControls.WebControl.Width"/>.
            </summary>
        </member>
        <member name="M:eWorld.UI.AccordionPanel.OnPreRender(System.EventArgs)">
            <summary>
            Overrides <see cref="M:eWorld.UI.CollapsablePanel.OnPreRender(System.EventArgs)"/>.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:eWorld.UI.AccordionPanel.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Overrides <see cref="M:eWorld.UI.CollapsablePanel.Render(System.Web.UI.HtmlTextWriter)"/>
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:eWorld.UI.AccordionPanel.AccordionExternalResourcePath">
            <summary>
            Gets and Sets the path to the external resource javascript file for the AccordionPanel.
            </summary>
            <remarks>
            Use ExternalResourcePath to point to the CollapsablePanel javascript file.
            </remarks>
        </member>
        <member name="P:eWorld.UI.AccordionPanel.GroupName">
            <summary>
            Gets and Sets a value indicating the group name this accordion panel is grouped by.
            </summary>
        </member>
        <member name="P:eWorld.UI.AccordionPanel.JavascriptOnToggleFunction">
            <summary>
            Overrides the <see cref="P:eWorld.UI.CollapsablePanel.JavascriptOnToggleFunction"/> for handling this controls' logic.
            </summary>
        </member>
        <member name="T:eWorld.UI.BreadCrumbTrailEventHandler">
            <summary>
            This describes the event handler for when bread crumb is rendered.
            </summary>
        </member>
        <member name="T:eWorld.UI.BreadCrumbTrail">
            <summary>
            The BreadCrumbTrail control allows you to easily add heiarchial navigation into your web applications.  There are three basic
            methods of setting up the control.  The default setup allows you to track the different pages the visitor has been to.  If
            they re-visit a page in the hiearchy, the links afterwards are no longer displayed.  The second method, is adding crumbs
            via the Crumbs collection.  The last way, is by data-binding the hiearchy.
            </summary>
            <remarks>
            For the control to work to the fullest, Session must be enabled if you're using method 1 described above.  If you're using methods
            2 or 3, Session is not required.
            </remarks>
            <example>
            <code><![CDATA[
            <%@ Register TagPrefix="ew" Assembly="eWorld.UI, Version=1.9.0.0, Culture=neutral, PublicKeyToken=24d65337282035f2" Namespace="eWorld.UI" %>
            <html>
             <head>
             </head>
             <body>
            	<form runat="server">
            		<ew:BreadCrumbTrail runat="server" id="BreadCrumbTrail1" PageName="My Page" />
            	</form>
             </body>
            </html>
            ]]></code>
            </example>
        </member>
        <member name="M:eWorld.UI.BreadCrumbTrail.OnTrailItemCreated(eWorld.UI.BreadCrumbTrailEventArgs)">
            <summary>
            This invokes the trail item created event.  This is called whenever a crumb is created.
            </summary>
            <param name="e">The event arguments passed in whenever the crumb is created.</param>
        </member>
        <member name="M:eWorld.UI.BreadCrumbTrail.#ctor">
            <summary>
            Creates a new instance of <see cref="T:eWorld.UI.BreadCrumbTrail"/>.
            </summary>
        </member>
        <member name="M:eWorld.UI.BreadCrumbTrail.OnInit(System.EventArgs)">
            <summary>
            Overridden.  Used to load the crumbs from session prior to any processing.
            </summary>
            <param name="e">The event arguments used for the base OnInit method.</param>
        </member>
        <member name="M:eWorld.UI.BreadCrumbTrail.OnPreRender(System.EventArgs)">
            <summary>
            Overridden.  Used to save the crumbs to session for retaining state across multiple pages.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:eWorld.UI.BreadCrumbTrail.CreateChildControls">
            <summary>
            Overridden.  Creates the hyperlink controls relating to the crumb collection.
            </summary>
        </member>
        <member name="M:eWorld.UI.BreadCrumbTrail.SaveViewState">
            <summary>
            Overridden.  Saves the viewstate for the control.
            </summary>
            <returns>The saved viewstate for this control.</returns>
        </member>
        <member name="M:eWorld.UI.BreadCrumbTrail.LoadViewState(System.Object)">
            <summary>
            Overridden. Loads the viewstate for this control.
            </summary>
            <param name="savedState">The state to be loaded for this control.</param>
        </member>
        <member name="M:eWorld.UI.BreadCrumbTrail.TrackViewState">
            <summary>
            Overridden.  Signals that the custom properties will also need to track viewstate.
            </summary>
        </member>
        <member name="M:eWorld.UI.BreadCrumbTrail.DataBind">
            <summary>
            Overridden.  Calls a custom method to load the Crumbs from a datasource.
            </summary>
        </member>
        <member name="M:eWorld.UI.BreadCrumbTrail.Reset">
            <summary>
            This will reset the bread crumb control so no crumbs exist in the collection.
            </summary>
        </member>
        <member name="E:eWorld.UI.BreadCrumbTrail.TrailItemCreated">
            <summary>
            This is the event that fires whenever the crumb is created.
            </summary>
        </member>
        <member name="P:eWorld.UI.BreadCrumbTrail.Crumbs">
            <summary>
            Gets the <see cref="T:eWorld.UI.CrumbCollection"/> of Crumbs for this trail.
            </summary>
        </member>
        <member name="P:eWorld.UI.BreadCrumbTrail.LinkStyle">
            <summary>
            Gets and sets the style associated with the Hyperlinks for movement.
            </summary>
        </member>
        <member name="P:eWorld.UI.BreadCrumbTrail.PageName">
            <summary>
            Gets and sets the name of the page the control is located on.
            </summary>
        </member>
        <member name="P:eWorld.UI.BreadCrumbTrail.CrumbSeparator">
            <summary>
            Gets and sets the separator between crumbs.
            </summary>
        </member>
        <member name="P:eWorld.UI.BreadCrumbTrail.StartAsFirstCrumb">
            <summary>
            Gets and sets a boolean value indicating that this control will reset the heiarchy of crumbs.
            </summary>
        </member>
        <member name="P:eWorld.UI.BreadCrumbTrail.TrackCrumbs">
            <summary>
            Gets and sets a boolean value indicating if the crumbs will be tracked via Session so state is not lost across multiple pages.
            </summary>
        </member>
        <member name="P:eWorld.UI.BreadCrumbTrail.DataPageNameField">
            <summary>
            Gets and sets the data field that is displayed for the text of the hyperlink.
            </summary>
        </member>
        <member name="P:eWorld.UI.BreadCrumbTrail.DataPageUriField">
            <summary>
            Gets and sets the data field that is displayed for the url of the hyperlink.
            </summary>
        </member>
        <member name="P:eWorld.UI.BreadCrumbTrail.DataSource">
            <summary>
            Gets and sets the data source used to bind the data.
            </summary>
        </member>
        <member name="P:eWorld.UI.BreadCrumbTrail.DataMember">
            <summary>
            Gets and sets the data member to be used when binding the data.
            </summary>
        </member>
        <member name="P:eWorld.UI.BreadCrumbTrail.CompareQueryString">
            <summary>
            Gets and Sets a boolean value indicating if the querystring parameters are used when
            comparing the url to determine if a page has been visited previously.
            </summary>
        </member>
        <member name="P:eWorld.UI.BreadCrumbTrail.SessionName">
            <summary>
            Gets and Sets the Session variable name that is used to store the bread crumbs.
            </summary>
        </member>
        <member name="P:eWorld.UI.BreadCrumbTrail.Controls">
            <summary>
            Overridden. Returns the base child controls.
            </summary>
        </member>
        <member name="T:eWorld.UI.CrumbCollection">
            <summary>
            This is the crumb collection class that is used for storing the crumbs for the <see cref="T:eWorld.UI.BreadCrumbTrail"/> control.
            </summary>
        </member>
        <member name="M:eWorld.UI.CrumbCollection.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:eWorld.UI.CrumbCollection"/> class.
            </summary>
        </member>
        <member name="M:eWorld.UI.CrumbCollection.Add(eWorld.UI.CrumbItem)">
            <summary>
            Adds a new <see cref="T:eWorld.UI.CrumbItem"/> onto the stack.
            </summary>
            <param name="item">The crumb item to be added.</param>
            <returns>Integer value indicating the location of the newly added crumb item.</returns>
        </member>
        <member name="M:eWorld.UI.CrumbCollection.Add(System.String,System.String)">
            <summary>
            Adds a new <see cref="T:eWorld.UI.CrumbItem"/> onto the stack.
            </summary>
            <param name="pageUri">The Uri of this crumb.</param>
            <param name="pageName">The page name of this crumb.</param>
            <returns>Integer value indicating the location of the newly added crumb item.</returns>
        </member>
        <member name="M:eWorld.UI.CrumbCollection.Add(System.String)">
            <summary>
            Adds a new <see cref="T:eWorld.UI.CrumbItem"/> onto the stack.
            </summary>
            <param name="pageUri">The Uri of this crumb.</param>
            <returns>Integer value indicating the location of the newly added crumb item.</returns>
        </member>
        <member name="M:eWorld.UI.CrumbCollection.AddRange(eWorld.UI.CrumbItem[])">
            <summary>
            Adds a range of <see cref="T:eWorld.UI.CrumbItem"/>'s onto the stack.
            </summary>
            <param name="items">Array of <see cref="T:eWorld.UI.CrumbItem"/>'s to be added.</param>
        </member>
        <member name="M:eWorld.UI.CrumbCollection.Insert(System.Int32,eWorld.UI.CrumbItem)">
            <summary>
            Inserts a <see cref="T:eWorld.UI.CrumbItem"/> into the collection at a specified index.
            </summary>
            <param name="index">The index of where to add the <see cref="T:eWorld.UI.CrumbItem"/>.</param>
            <param name="item">The <see cref="T:eWorld.UI.CrumbItem"/> being added.</param>
        </member>
        <member name="M:eWorld.UI.CrumbCollection.Remove(eWorld.UI.CrumbItem)">
            <summary>
            Removes a <see cref="T:eWorld.UI.CrumbItem"/> from the collection.
            </summary>
            <param name="item">The <see cref="T:eWorld.UI.CrumbItem"/> to be removed.</param>
        </member>
        <member name="M:eWorld.UI.CrumbCollection.Remove(System.String)">
            <summary>
            Removes a <see cref="T:eWorld.UI.CrumbItem"/> from the collection.
            </summary>
            <param name="pageUri">The PageUri of the crumb to be removed.</param>
        </member>
        <member name="M:eWorld.UI.CrumbCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a <see cref="T:eWorld.UI.CrumbItem"/> from the collection at a specified index.
            </summary>
            <param name="index">The index of the <see cref="T:eWorld.UI.CrumbItem"/> to be removed.</param>
        </member>
        <member name="M:eWorld.UI.CrumbCollection.Clear">
            <summary>
            Clears the collection of <see cref="T:eWorld.UI.CrumbItem"/>'s.
            </summary>
        </member>
        <member name="M:eWorld.UI.CrumbCollection.IndexOf(eWorld.UI.CrumbItem)">
            <summary>
            Retrieves the location of a <see cref="T:eWorld.UI.CrumbItem"/> in the collection.
            </summary>
            <param name="item">The <see cref="T:eWorld.UI.CrumbItem"/> to search for.</param>
            <returns>The index of where the <see cref="T:eWorld.UI.CrumbItem"/> is located.  -1 is returned if none is found.</returns>
        </member>
        <member name="M:eWorld.UI.CrumbCollection.IndexOf(System.String)">
            <summary>
            Retrieves the location of a <see cref="T:eWorld.UI.CrumbItem"/> in the collection.
            </summary>
            <param name="pageUri">The PageUri to search for.</param>
            <returns>The index of where the <see cref="T:eWorld.UI.CrumbItem"/> is located.  -1 is returned if none is found.</returns>
        </member>
        <member name="M:eWorld.UI.CrumbCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies this collection into an array.
            </summary>
            <param name="array">Array to copy the collection to.</param>
            <param name="index">The index of the array to start at.</param>
        </member>
        <member name="M:eWorld.UI.CrumbCollection.Reset">
            <summary>
            Resets the  enumerator to the begining of the collection.
            </summary>
        </member>
        <member name="M:eWorld.UI.CrumbCollection.MoveNext">
            <summary>
            Moves the enumeration to the next item in the collection.
            </summary>
            <returns>A boolean value if successful.</returns>
        </member>
        <member name="M:eWorld.UI.CrumbCollection.GetEnumerator">
            <summary>
            Retrieves an enumerator of the collection.
            </summary>
            <returns>An IEnumerator object.</returns>
        </member>
        <member name="M:eWorld.UI.CrumbCollection.System#Web#UI#IStateManager#TrackViewState">
            <summary>
            Implements <see cref="M:System.Web.UI.IStateManager.TrackViewState"/>
            </summary>
        </member>
        <member name="M:eWorld.UI.CrumbCollection.System#Web#UI#IStateManager#SaveViewState">
            <summary>
            Implements <see cref="M:System.Web.UI.IStateManager.SaveViewState"/>
            </summary>
            <returns>The saved state.</returns>
        </member>
        <member name="M:eWorld.UI.CrumbCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)">
            <summary>
            Implements <see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)"/>
            </summary>
            <param name="state">The state to be loaded.</param>
        </member>
        <member name="P:eWorld.UI.CrumbCollection.Count">
            <summary>
            Gets the number of items located in this collection.
            </summary>
        </member>
        <member name="P:eWorld.UI.CrumbCollection.Item(System.Int32)">
            <summary>
            Gets a <see cref="T:eWorld.UI.CrumbItem"/> reference at the specififed index in the collection.
            </summary>
        </member>
        <member name="P:eWorld.UI.CrumbCollection.Item(System.String)">
            <summary>
            Gets a <see cref="T:eWorld.UI.CrumbItem"/> reference of the specified pageUri.
            </summary>
        </member>
        <member name="P:eWorld.UI.CrumbCollection.IsSynchronized">
            <summary>
            Gets a value indicating if the collection is synchronized.
            </summary>
        </member>
        <member name="P:eWorld.UI.CrumbCollection.SyncRoot">
            <summary>
            Gets a value of the syncRoot.
            </summary>
        </member>
        <member name="P:eWorld.UI.CrumbCollection.Current">
            <summary>
            Retrieves the current object at the current index.
            </summary>
        </member>
        <member name="P:eWorld.UI.CrumbCollection.System#Web#UI#IStateManager#IsTrackingViewState">
            <summary>
            Implements <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState"/>
            </summary>
        </member>
        <member name="T:eWorld.UI.CrumbItem">
            <summary>
            Crumb Item class that stores information of a single crumb in the <see cref="T:eWorld.UI.CrumbCollection"/>.
            </summary>
        </member>
        <member name="M:eWorld.UI.CrumbItem.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:eWorld.UI.CrumbItem"/> class.
            </summary>
            <param name="pageUri">The Page Uri (Url) of the crumb item.</param>
        </member>
        <member name="M:eWorld.UI.CrumbItem.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:eWorld.UI.CrumbItem"/> class.
            </summary>
            <param name="pageUri">The page Uri (Url) of the crumb item.</param>
            <param name="pageName">The page name of the crumb item.</param>
        </member>
        <member name="M:eWorld.UI.CrumbItem.System#Web#UI#IStateManager#TrackViewState">
            <summary>
            Implements <see cref="M:System.Web.UI.IStateManager.TrackViewState"/>
            </summary>
        </member>
        <member name="M:eWorld.UI.CrumbItem.System#Web#UI#IStateManager#SaveViewState">
            <summary>
            Implements <see cref="M:System.Web.UI.IStateManager.SaveViewState"/>
            </summary>
            <returns>The saved state.</returns>
        </member>
        <member name="M:eWorld.UI.CrumbItem.System#Web#UI#IStateManager#LoadViewState(System.Object)">
            <summary>
            Implements <see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)"/>
            </summary>
            <param name="state">The state to be loaded.</param>
        </member>
        <member name="P:eWorld.UI.CrumbItem.PageUri">
            <summary>
            Gets and sets the Page Uri (Url) of this crumb item.
            </summary>
        </member>
        <member name="P:eWorld.UI.CrumbItem.PageName">
            <summary>
            Gets and sets the Page Name of this crumb item.
            </summary>
        </member>
        <member name="P:eWorld.UI.CrumbItem.ViewState">
            <summary>
            Gets the viewstate for this crumb item.
            </summary>
        </member>
        <member name="P:eWorld.UI.CrumbItem.System#Web#UI#IStateManager#IsTrackingViewState">
            <summary>
            Implements <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState"/>
            </summary>
        </member>
        <member name="T:eWorld.UI.BreadCrumbTrailEventArgs">
            <summary>
            Event Arguments for the <see cref="T:eWorld.UI.BreadCrumbTrail"/> control.
            </summary>
        </member>
        <member name="M:eWorld.UI.BreadCrumbTrailEventArgs.#ctor(System.Web.UI.Control,System.String,System.String)">
            <summary>
            Creats a new instance of the <see cref="T:eWorld.UI.BreadCrumbTrailEventArgs"/> class.
            </summary>
            <param name="trailItem">The <see cref="T:eWorld.UI.CrumbItem"/> being added to the trail.  Either in the form of a HyperLink or Literal control.</param>
            <param name="pageUri">The Uri (Url) of the <see cref="T:eWorld.UI.CrumbItem"/> being added.</param>
            <param name="pageName">The page name of the <see cref="T:eWorld.UI.CrumbItem"/> being added.</param>
        </member>
        <member name="P:eWorld.UI.BreadCrumbTrailEventArgs.TrailItem">
            <summary>
            Gets the <see cref="T:eWorld.UI.CrumbItem"/> that was added to the trail.
            </summary>
        </member>
        <member name="P:eWorld.UI.BreadCrumbTrailEventArgs.PageUri">
            <summary>
            Gets the PageUri of the <see cref="T:eWorld.UI.CrumbItem"/> that was added to the trail.
            </summary>
        </member>
        <member name="P:eWorld.UI.BreadCrumbTrailEventArgs.PageName">
            <summary>
            Gets the PageName of the <see cref="T:eWorld.UI.CrumbItem"/> that was added to the trail.
            </summary>
        </member>
        <member name="T:eWorld.UI.Design.BreadCrumbTrailDesigner">
            <summary>
            This is the designer for the <see cref="T:eWorld.UI.BreadCrumbTrail"/>.
            </summary>
        </member>
        <member name="M:eWorld.UI.Design.BreadCrumbTrailDesigner.GetDesignTimeHtml">
            <summary>
            Overrides <see cref="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml"/>
            </summary>
            <returns>Generated HTML for the designer.</returns>
        </member>
        <member name="M:eWorld.UI.Design.BreadCrumbTrailDesigner.GetErrorDesignTimeHtml(System.Exception)">
            <summary>
            Overrides <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)"/>
            </summary>
            <param name="e">The exception.</param>
            <returns>The formatted error message.</returns>
        </member>
        <member name="T:eWorld.UI.DateChangedEventHandler">
            <summary>
            This describes the event handler for when the selected date has changed.
            </summary>
        </member>
        <member name="T:eWorld.UI.CalendarPopup">
            <summary>
            The Calendar Popup control is an easy to use, multi-browser control that will
            allow you to easily add date selection to your web forms.  For DHTML enabled browsers
            (Internet Explorer 5+ and Netscape 6+), the calendar is displayed within the current window.
            For non DHTML enabled browsers (Internet Explorer 4 and Netscape 4), the calendar is displayed 
            in a new window.  Both calendars are dynamically generated by Javascript and displayed.
            </summary>
            <remarks>
            Use the <b>Calendar Popup</b> control to display a single month of a calendar on a web page using
            DHTML and Javascript. The control allows you to easily select a particular date, which is then displayed
            in either a textbox or label control.
            <br/>
            By default the control displays the a textbox and button.  If the client is using a newer browser that
            allows for DHTML, a calendar layer will be displayed once the button is clicked.  If the client is using
            a non-supported browser, a new window will open containing the calendar.
            </remarks>
            <example>
            <code><![CDATA[
            <%@ Register TagPrefix="ew" Assembly="eWorld.UI, Version=1.9.0.0, Culture=neutral, PublicKeyToken=24d65337282035f2" Namespace="eWorld.UI" %>
            <html>
             <head>
             </head>
             <body>
            	<form runat="server">
            		<ew:CalendarPopup id="calendarPopup1" runat="server" ControlDisplay="TextboxImage" Text="Change Date" ImageUrl="images/calendar.gif">
            			<MonthHeaderStyle BackColor="red" ForeColor="black" />
            			<DayHeaderStyle BackColor="orange" ForeColor="black" />
            			<WeekdayStyle BackColor="white" ForeColor="black" />
            			<WeekendStyle BackColor="lightgrey" ForeColor="black" />
            		</ew:CalendarPopup>
            	</form>
             </body>
            </html>
            ]]></code>
            </example>
        </member>
        <member name="M:eWorld.UI.CalendarPopup.OnDateChanged(System.EventArgs)">
            <summary>
            This invokes the date changed event.  This is called whenever the date is changed.
            </summary>
            <param name="e">The event arguments passed in whenever the date has changed.</param>
        </member>
        <member name="M:eWorld.UI.CalendarPopup.OnCommand(System.Web.UI.WebControls.CommandEventArgs)">
            <summary>
            This invokes the command event.
            </summary>
            <param name="e">The command event arguments passed in whenever the the command has been fired.</param>
        </member>
        <member name="M:eWorld.UI.CalendarPopup.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            This loads data into the control members from the postback information.
            </summary>
            <param name="postDataKey">The data key for which this item is related to.</param>
            <param name="postCollection">The Name Value Collection that contains the the data of the keys posted back.</param>
            <returns>A boolean indicating if the data has changed since the last postback.</returns>
        </member>
        <member name="M:eWorld.UI.CalendarPopup.RaisePostDataChangedEvent">
            <summary>
            This method raises the DateChanged event whenever the date has been changed from postbacks.
            </summary>
        </member>
        <member name="M:eWorld.UI.CalendarPopup.#ctor">
            <summary>
            This is the constructor for a calendar popup control.  It sets the default values for all the styles
            and properties for the control to be displayed properly.
            </summary>
        </member>
        <member name="M:eWorld.UI.CalendarPopup.OnDataBinding(System.EventArgs)">
            <summary>
            Overrides WebControl.OnDataBinding.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:eWorld.UI.CalendarPopup.CreateChildControls">
            <summary>
            Overrides System.Web.UI.WebControls.WebControl.CreateChildControls.
            </summary>
        </member>
        <member name="M:eWorld.UI.CalendarPopup.ToJavaScriptDateTime(System.DateTime)">
            <summary>
            Converts the Dotnet DateTime to JavaScript Date in milliseconds from 1970.
            </summary>
            <param name="dt">DateTime</param>
            <returns>JavaScript Date in milliseconds</returns>
        </member>
        <member name="M:eWorld.UI.CalendarPopup.ToJavaScriptDate(System.DateTime)">
            <summary>
            Converts the Dotnet DateTime to JavaScript Date in milliseconds from 1970.
            </summary>
            <param name="dt">DateTime</param>
            <returns>JavaScript Date in milliseconds</returns>
        </member>
        <member name="M:eWorld.UI.CalendarPopup.OnPreRender(System.EventArgs)">
            <summary>
            Overrides System.Web.UI.WebControls.WebControl.OnPreRender
            </summary>
            <param name="e">The event arguments for this method.</param>
        </member>
        <member name="M:eWorld.UI.CalendarPopup.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Overrides <see cref="M:System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)"/>
            </summary>
            <param name="output"><see cref="T:System.Web.UI.HtmlTextWriter"/> object of the current controls html output.</param>
        </member>
        <member name="M:eWorld.UI.CalendarPopup.LoadViewState(System.Object)">
            <summary>
            Overrides System.Web.UI.WebControl.LoadViewState
            </summary>
        </member>
        <member name="M:eWorld.UI.CalendarPopup.SaveViewState">
            <summary>
            Overrides System.Web.UI.WebControl.SaveViewState
            </summary>
        </member>
        <member name="M:eWorld.UI.CalendarPopup.TrackViewState">
            <summary>
            Overrides System.Web.UI.WebControl.TrackViewState
            </summary>
        </member>
        <member name="M:eWorld.UI.CalendarPopup.Clear">
            <summary>
            This will clear the arbitrary text and selected date if it is nullable and allows arbitrary text.
            </summary>
        </member>
        <member name="M:eWorld.UI.CalendarPopup.Reset">
            <summary>
            This resets the controls SelectedDate property to todays date.
            </summary>
        </member>
        <member name="M:eWorld.UI.CalendarPopup.Reset(System.DateTime)">
            <summary>
            This resets the controls SelectedDate property to the passed in date.
            </summary>
            <param name="resetDate">The date to reset the control to.</param>
        </member>
        <member name="E:eWorld.UI.CalendarPopup.DateChanged">
            <summary>
            This is the event that fires whenever the selected date has changed in the control 
            from the particular post backs.
            </summary>
        </member>
        <member name="E:eWorld.UI.CalendarPopup.Command">
            <summary>
            This is the event that fires whenever a command has taken place in the control.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.ControlDisplay">
            <summary>
            This gets or sets how the control is displayed to the user using the DisplayType enumeration.
            </summary>
            <value>
            The default value for this property is eWorld.UI.DisplayType.TextBoxButton
            </value>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.WeekdayStyle">
            <summary>
            This gets or sets the style of the weekday days displayed in the popup calendar.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.WeekendStyle">
            <summary>
            This gets or sets the style of the weekend days displayed in the popup calendar.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.OffMonthStyle">
            <summary>
            This gets or sets the style of the previous/next month days displayed in the popup calendar.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.SelectedDateStyle">
            <summary>
            This gets or sets the style of the selected day displayed in the popup calendar.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.MonthHeaderStyle">
            <summary>
            This gets or sets the style of the month header displayed in the popup calendar.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.DayHeaderStyle">
            <summary>
            This gets or sets the style of the day header displayed in the popup calendar.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.TextboxLabelStyle">
            <summary>
            This gets or sets the style of the textbox or label.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.ButtonStyle">
            <summary>
            This gets or sets the style of the button when displayed as TextboxButton or LabelButton
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.ClearDateStyle">
            <summary>
            This gets or sets the style of the clear date row when the control allows null values.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.GoToTodayStyle">
            <summary>
            This gets or sets the style of the go to today row.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.TodayDayStyle">
            <summary>
            This gets or sets the style of todays date.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.CellPadding">
            <summary>
            This gets or sets the cellpadding of the popup calendar.
            </summary>
            <value>
            The default value of this property is 2.
            </value>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.CellSpacing">
            <summary>
            This gets or sets the cellspacing of the popup calendar.
            </summary>
            <value>
            The default value of this property is 0.
            </value>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.SelectedDate">
            <summary>
            This gets or sets the selected date in the popup calendar control.
            </summary>
            <value>
            The default value of this property is the current date.
            </value>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.VisibleDate">
            <summary>
            Gets and Sets the date that is initially visible when the calendar loads.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.PostedDate">
            <summary>
            This gets the posted date sent back via the server.  This is used for the validation property.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.Text">
            <summary>
            This gets or sets the text displayed in the button that the user clicks
            on to display the calendar. This is only displayed when using a button type.
            </summary>
            <value>
            The default value of this property is " ... "
            </value>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.ImageUrl">
            <summary>
            This gets or sets the url of the image that is displayed when
            the control has an image mode.
            </summary>
            <value>
            The default value of this property is " ... "
            </value>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.Culture">
            <summary>
            This gets or sets the culture of the calendar.
            </summary>
            <value>
            The default culture is the client culture upon visit to the page.
            </value>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.EnableHideDropDown">
            <summary>
            This gets or sets a value indicating if drop-downs (or list boxes) will be hidden when the calendar appears.
            </summary>
            <value>
            The default value is false, drop downs will not be hidden.
            </value>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.DisplayPrevNextYearSelection">
            <summary>
            This gets or sets a value indicating if the calendar will display links for jumping to different years.
            </summary>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.Nullable">
            <summary>
            This gets or sets a value indicating if the control can allow null/empty values.
            </summary>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.ValidDateEntered">
            <summary>
            This gets a value indicating if the date entered is a valid date
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.LowerBoundDate">
            <summary>
            This gets or sets the lower bounded date the user can select.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.UpperBoundDate">
            <summary>
            This gets or sets the upper bounded date the user can select.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.CalendarLocation">
            <summary>
            This gets or sets the location that the calendar will be positioned.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.DisableTextboxEntry">
            <summary>
            This gets or sets a boolean value indicating if the client can manually type in a date.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.EnableLooseFocus">
            <summary>
            Gets or sets a boolean value indicating if the control will override the documents onmouseclick event for the feature of "Loosing Focus" of the control.
            </summary>
            <remarks>
            <b>Note:</b> If you choose to have one control disable this feature, all CalendarPopup controls on the page must disable it or the controls will not function properly.
            </remarks>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.NetscapeWindowHeight">
            <summary>
            Gets or sets a value indicating the height of the popup window for unsupported (Netscape 4) browsers.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.NetscapeWindowWidth">
            <summary>
            Gets or sets a value indicating the width of the popup window for unsupported (Netscape 4) browsers.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.NetscapeStyleSheetLocation">
            <summary>
            Gets and sets the stylesheet location used for unsupported (Netscape 4) browsers.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.PadSingleDigits">
            <summary>
            Gets or sets a value indicating if single digits of the date string will be padded with a leading zero.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.AutoPostBack">
            <summary>
            Gets or sets a value indicating whether an automatic postback to the server will occur whenever the user changes the date.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.DisplayOffsetX">
            <summary>
            Gets or sets the display offset of the x axis for the calendar popup in terms of pixels.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.DisplayOffsetY">
            <summary>
            Gets or sets the display offset of the y axis for the calendar popup in terms of pixels.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.DisabledEntryDisplayAction">
            <summary>
            Gets or sets the display action taken when DisabledTextboxEntry is true.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.ShowClearDate">
            <summary>
            Gets and sets a boolean value indicating if the Clear Date link will appear when the control is nullable.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.ClearDateText">
            <summary>
            Gets and sets the Clear Date text displayed when the calendar is rendered.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.ShowGoToToday">
            <summary>
            Gets and sets a boolean value indicating if the Go To Today link will appear.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.GoToTodayText">
            <summary>
            Gets and sets the Go To Today text displayed when the calendar is rendered.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.Height">
            <summary>
            Overrides <see cref="P:System.Web.UI.WebControls.WebControl.Height"/>.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.Width">
            <summary>
            Overrides <see cref="P:System.Web.UI.WebControls.WebControl.Width"/>.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.DayNameFormat">
            <summary>
            Gets and sets the <see cref="P:eWorld.UI.CalendarPopup.DayNameFormat"/> for displaying the day name.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.MonthYearPopupApplyText">
            <summary>
            Gets and sets the text displayed for the 'Apply' button on the MonthYear Popup.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.MonthYearPopupCancelText">
            <summary>
            Gets and sets the text displayed for the 'Cancel' button on the MonthYear Popup.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.MonthYearArrowImageUrl">
            <summary>
            Gets and sets the image url for the arrow next to the Month/Year.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.JavascriptOnChangeFunction">
            <summary>
            Gets and Sets the custom javascript function that will be called when a date has been selected.
            </summary>
            <remarks>
            The function must take in 2 parameters. (1) is the selected date, type string. (2) is the textbox or hidden fields id.
            </remarks>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.AllowArbitraryText">
            <summary>
            Gets and Sets a value allowing the end user to enter arbitrary text into the textbox.
            </summary>
            <remarks>
            This only works with the TextBox format, and DisableTextboxEntry set to false.
            </remarks>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.CalendarWidth">
            <summary>
            Gets and Sets the width of the displayed calendar, in pixels.
            </summary>
            <remarks>Set to -1 if you wish it to be based on size of content.</remarks>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.ForcePopup">
            <summary>
            Gets and Sets a value indicating if a new window will popup for DHTML enabled browsers.
            </summary>
            <remarks>
            All calendar popups on the page must have the same value for this property.
            </remarks>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.UseExternalResource">
            <summary>
            Gets and Sets a value indicating if the external resource javascript file is used instead of inline Javascript.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.ExternalResourcePath">
            <summary>
            Gets and Sets the path to the external resource javascript file.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.CommandName">
            <summary>
            Gets and Sets the command name associated with the <see cref="T:eWorld.UI.CalendarPopup"/> control that is passed to the Command event.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.CommandArgument">
            <summary>
            Gets and Sets an optional parameter passed to the Command event along with the associated CommandName.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.NullableLabelText">
            <summary>
            Gets and Sets the text displayed for the label when it is nulled out.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.Holidays">
            <summary>
            Gets the holidays that will be marked on the calendar..
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.HolidayStyle">
            <summary>
            This gets or sets the style of the holidays displayed in the popup calendar.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.HolidayDataSource">
            <summary>
            Gets or sets the data source that provides data for populating the holidays.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.HolidayDataMember">
            <summary>
            Gets and Sets the data member used for databinding the holidays.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.HolidayDateField">
            <summary>
            Gets and Sets the date field used for data binding the holidays.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.NextMonthImageUrl">
            <summary>
            Gets and Sets the image url for the next month advancement.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.PreviousMonthImageUrl">
            <summary>
            Gets and Sets the image url for the previous year advancement.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.NextYearImageUrl">
            <summary>
            Gets and Sets the image url for the next year advancement.
            </summary>
        </member>
        <member name="P:eWorld.UI.CalendarPopup.PreviousYearImageUrl">
            <summary>
            Gets and Sets the image url for the previous year advancement.
            </summary>
        </member>
        <member name="T:eWorld.UI.Design.CalendarPopupDesigner">
            <summary>
            This is the HTML designer view for the calendar popup control.
            </summary>
        </member>
        <member name="M:eWorld.UI.Design.CalendarPopupDesigner.GetDesignTimeHtml">
            <summary>
            This will build the html designer view of the calendar popup control
            dependant on the current control being created.
            </summary>
            <returns>The html generated for the calendar popup control.</returns>
        </member>
        <member name="T:eWorld.UI.DisplayType">
            <summary>
            This determines how the calendar popup control is displayed to the user.
            </summary>
        </member>
        <member name="F:eWorld.UI.DisplayType.TextBoxButton">
            <summary>
            This defines that the date is displayed in a text box with a button for the 
            user to click for the popup calendar.
            </summary>
        </member>
        <member name="F:eWorld.UI.DisplayType.LabelButton">
            <summary>
            This defines that the date is displayed in a label with a button for the
            user to click for the popup calendar.
            </summary>
        </member>
        <member name="F:eWorld.UI.DisplayType.TextBoxImage">
            <summary>
            This defines that the date is displayed in a text box with a image for the
            user to click for the popup calendar.
            </summary>
        </member>
        <member name="F:eWorld.UI.DisplayType.LabelImage">
            <summary>
            This defines that the date is displayed in a label with a image for the
            user to click for the popup calendar.
            </summary>
        </member>
        <member name="F:eWorld.UI.DisplayType.Button">
            <summary>
            This defines that the date is not displayed, but only a button is present
            to display the popup calendar.
            </summary>
        </member>
        <member name="F:eWorld.UI.DisplayType.Image">
            <summary>
            This defines that the date is not displayed, but only a image is present
            to display the popup calendar.
            </summary>
        </member>
        <member name="F:eWorld.UI.DisplayType.TextBox">
            <summary>
            This defines that only a textbox is present
            to display the popup calendar.
            </summary>
        </member>
        <member name="T:eWorld.UI.DisplayLocation">
            <summary>
            This determines where a control is placed in relevance to its parent control.
            </summary>
        </member>
        <member name="F:eWorld.UI.DisplayLocation.Bottom">
            <summary>
            This defines that the control will be placed below its parent control.
            </summary>
        </member>
        <member name="F:eWorld.UI.DisplayLocation.Left">
            <summary>
            This defines that the control will be placed to the left of its parent control.
            </summary>
        </member>
        <member name="F:eWorld.UI.DisplayLocation.Right">
            <summary>
            This defines that the control will be placed to the right of its parent control.
            </summary>
        </member>
        <member name="F:eWorld.UI.DisplayLocation.Top">
            <summary>
            This defines that the control will be placed above its parent control.
            </summary>
        </member>
        <member name="T:eWorld.UI.DisplayAction">
            <summary>
            This determines what action is taken when the DisableTextBox entry is true on how
            the calendar is displayed.
            </summary>
        </member>
        <member name="F:eWorld.UI.DisplayAction.OnClick">
            <summary>
            This defines that the calendar will be displayed when the user clicks on the textbox.
            This is the default property set when DisableTextboxEntry is true.
            </summary>
        </member>
        <member name="F:eWorld.UI.DisplayAction.OnFocus">
            <summary>
            This defines that the calendar will be displayed when the user gains focus on the textbox either by clicking or tabbing to it.
            </summary>
        </member>
        <member name="F:eWorld.UI.DisplayAction.OnMouseOver">
            <summary>
            This defines that the calendar will be displayed when the mouse hovers over the textbox.
            </summary>
        </member>
        <member name="F:eWorld.UI.DisplayAction.OnButtonClick">
            <summary>
            This defines that the calendar will be displayed when the user clicks the image or button.  This
            will automatically make the button or image appear.
            </summary>
        </member>
        <member name="T:eWorld.UI.ListItemType">
            <summary>
            Specifies the type of an item in the FaqRepeater control.
            </summary>
            <remarks>
            The ListItemType enumeration represents the different items that can be included in a the FaqRepeater control. A typical list control consists of cells that contain elements represented by this enumeration.
            </remarks>
        </member>
        <member name="F:eWorld.UI.ListItemType.Answer">
            <summary>
            An item that is the answer to a question.  The template relating to this item is required.  It is data-bound.
            </summary>
        </member>
        <member name="F:eWorld.UI.ListItemType.Question">
            <summary>
            An item that is the question in the FaqRepeater control. The template relating to this item is required. It is data-bound.
            </summary>
        </member>
        <member name="F:eWorld.UI.ListItemType.Separator">
            <summary>
            A separator between a set of question and answer items in the FaqRepeater control. It is not data-bound.
            </summary>
        </member>
        <member name="T:eWorld.UI.HorizontalAlignment">
            <summary>
            Specifies the location of the text when the textbox is rendered.
            </summary>
        </member>
        <member name="F:eWorld.UI.HorizontalAlignment.Left">
            <summary>
            This defines that the text in the numeric box will be aligned to the left.
            </summary>
        </member>
        <member name="F:eWorld.UI.HorizontalAlignment.Right">
            <summary>
            This defines that the text in the numeric box will be aligned to the right.
            </summary>
        </member>
        <member name="T:eWorld.UI.TimeInterval">
            <summary>
            Specifies the time interval used for the TimePicker control.
            </summary>
        </member>
        <member name="F:eWorld.UI.TimeInterval.OneMinute">
            <summary>
            The interval is set to 1 minute at a time
            </summary>
        </member>
        <member name="F:eWorld.UI.TimeInterval.FiveMinutes">
            <summary>
            The interval is set to 5 minutes at a time
            </summary>
        </member>
        <member name="F:eWorld.UI.TimeInterval.TenMinutes">
            <summary>
            The interval is set to 10 minutes at a time
            </summary>
        </member>
        <member name="F:eWorld.UI.TimeInterval.FifteenMinutes">
            <summary>
            The interval is set to 15 minutes at a time
            </summary>
        </member>
        <member name="F:eWorld.UI.TimeInterval.ThirtyMinutes">
            <summary>
            The interval is set to 30 minutes at a time
            </summary>
        </member>
        <member name="F:eWorld.UI.TimeInterval.OneHour">
            <summary>
            The interval is set to 60 minutes at a time
            </summary>
        </member>
        <member name="T:eWorld.UI.TitleStyleContainer">
            <summary>
            Specifies how the title style is applied for the <see cref="T:eWorld.UI.CollapsablePanel"/> control.
            </summary>
        </member>
        <member name="F:eWorld.UI.TitleStyleContainer.Normal">
            <summary>
            Regular formatting is applied.
            </summary>
        </member>
        <member name="F:eWorld.UI.TitleStyleContainer.TitleOnly">
            <summary>
            The style is applied to only the title row.
            </summary>
        </member>
        <member name="F:eWorld.UI.TitleStyleContainer.EntirePanel">
            <summary>
            The style is applied to the entire panel
            </summary>
        </member>
        <member name="T:eWorld.UI.SortType">
            <summary>
            Specifies how the sorting is applied for the <see cref="T:eWorld.UI.OrderedListBox"/> control.
            </summary>
        </member>
        <member name="F:eWorld.UI.SortType.TextAscending">
            <summary>
            Allows sorting the list items by text in a ascending manner.
            </summary>
        </member>
        <member name="F:eWorld.UI.SortType.TextDescending">
            <summary>
            Allows sorting the list items by text in a descending manner.
            </summary>
        </member>
        <member name="F:eWorld.UI.SortType.ValueAscending">
            <summary>
            Allows sorting the list items by value in a ascending manner.
            </summary>
        </member>
        <member name="F:eWorld.UI.SortType.ValueDescending">
            <summary>
            Allows sorting the list items by value in a descending manner.
            </summary>
        </member>
        <member name="T:eWorld.UI.EmptyDataGrid">
            <summary>
            The EmptyDataGrid inherits and extends the <see cref="T:System.Web.UI.WebControls.DataGrid"/> adding the ability
            to display a templated row when no data exists.
            </summary>
            <remarks>
            Currently there is no design time support for the EmptyDataTemplate
            </remarks>
            <example>
            <code><![CDATA[
            [Visual Basic]
            <%@ Page Language="VB" %>
            <%@ Register TagPrefix="ew" Assembly="eWorld.UI, Version=1.9.0.0, Culture=neutral, PublicKeyToken=24d65337282035f2" Namespace="eWorld.UI" %>
            <html>
            <head>
            
            	<script language="VB" runat="server">
            	Sub Page_Load(sender As Object, e As EventArgs)
            		If Not Page.IsPostBack Then
            		
            			'Prepare the Dataset
            			Dim staffDs As New DataSet("StaffDataSet")
            			
            			Dim staffTbl As DataTable = staffDs.Tables.Add("Staff")
            			
            			staffTbl.Columns.Add("StaffID", Type.GetType("System.Int32"))
            			staffTbl.Columns.Add("FirstName", Type.GetType("System.String"))
            			staffTbl.Columns.Add("LastName", Type.GetType("System.String"))
            			
            			' Bind the EmptyDataGrid to the dataset
            			EmptyDataGrid1.DataSource = staffTbl
            			EmptyDataGrid1.DataBind()
            			
            		End If
            	End Sub
            
            </head>
            <body>
            	<form runat="server">
            		<ew:EmptyDataGrid Runat="server" ID="EmptyDataGrid1">
            			<EmptyDataStyle ForeColor="Red" />
            			<EmptyDataTemplate>
            				No staff records were returned.
            			</EmptyDataTemplate>
            		</ew:EmptyDataGrid>
            	</form>
            </body>
            </html>
            
            [C#]
            <%@ Page Language="C#" %>
            <%@ Register TagPrefix="ew" Assembly="eWorld.UI" Namespace="eWorld.UI" Version=1.8.9.0, Culture=neutral, PublicKeyToken=24d65337282035f2" %>
            <html>
            <head>
            
            	<script language="C#" runat="server">
            	public void Page_Load(object sender, EventArgs e)
            	{
            		if(!Page.IsPostBack)
            		{
            		
            			// prepare the dataset
            			DataSet staffDs = new DataSet("StaffDataSet");
            			
            			DataTable staffTbl = staffDs.Tables.Add("Staff");
            			
            			staffTbl.Columns.Add("StaffID", typeof(Int32));
            			staffTbl.Columns.Add("FirstName", typeof(string));
            			staffTbl.Columns.Add("LastName", typeof(string));
            			
            			' Bind the EmptyDataGrid to the dataset
            			EmptyDataGrid1.DataSource = staffTbl;
            			EmptyDataGrid11.DataBind();
            			
            		}
            	}
            
            </head>
            <body>
            	<form runat="server">
            		<ew:EmptyDataGrid Runat="server" ID="EmptyDataGrid1">
            			<EmptyDataStyle ForeColor="Red" />
            			<EmptyDataTemplate>
            				No staff records were returned.
            			</EmptyDataTemplate>
            		</ew:EmptyDataGrid>
            	</form>
            </body>
            </html>
            ]]></code>
            </example>
        </member>
        <member name="M:eWorld.UI.EmptyDataGrid.PrepareControlHierarchy">
            <summary>
            Overrides DataGrid.PrepareControlHiearchy
            </summary>
        </member>
        <member name="P:eWorld.UI.EmptyDataGrid.EmptyDataTemplate">
            <summary>
            Gets and Sets the Template whenever the data being bound is empty.
            </summary>
        </member>
        <member name="P:eWorld.UI.EmptyDataGrid.EmptyDataStyle">
            <summary>
            Gets the style applied to the empty data template.
            </summary>
        </member>
        <member name="T:eWorld.UI.EmptyDataGridItem">
            <summary>
            TableRow related directly to the <see cref="T:eWorld.UI.EmptyDataGrid"/> that is used as a template container.
            </summary>
        </member>
        <member name="M:eWorld.UI.EmptyDataGridItem.#ctor">
            <summary>
            Instantiates a new instance of the EmptyDataGridItem.
            </summary>
        </member>
        <member name="T:eWorld.UI.FaqRepeater">
            <summary>
            A data-bound list control that allows you to add a Faq style listing of question and answers 
            similar to what is found at Microsoft's Website. 
            </summary>
            <remarks>
            Use the <b>FaqRepeater</b> control to display Faq type questions and answers.  Some restrictions
            apply to what you cannot place into the QuestionTemplate (described later).  The control was designed
            for Internet Explorer 5+ and Netscape 6+.  If unsupported (older) browsers view this control, a non-collapsable
            control is displayed.
            </remarks>
            <example>
            <code><![CDATA[
            [Visual Basic]
            <%@ Page Language="VB" %>
            <%@ Register TagPrefix="ew" Assembly="eWorld.UI, Version=1.9.0.0, Culture=neutral, PublicKeyToken=24d65337282035f2" Namespace="eWorld.UI" %>
            <html>
            <head>
            
            	<script language="VB" runat="server">
            	Sub Page_Load(sender As Object, e As EventArgs)
            		If Not Page.IsPostBack Then
            		
            			'Prepare the Dataset
            			Dim staffDs As New DataSet("StaffDataSet")
            			
            			Dim staffTbl As DataTable = staffDs.Tables.Add("Staff")
            			
            			staffTbl.Columns.Add("StaffID", Type.GetType("System.Int32"))
            			staffTbl.Columns.Add("FirstName", Type.GetType("System.String"))
            			staffTbl.Columns.Add("LastName", Type.GetType("System.String"))
            			
            			Dim dr1 As DataRow = staffTbl.NewRow()
            			Dim dr2 As DataRow = staffTbl.NewRow()
            			Dim dr3 As DataRow = staffTbl.NewRow()
            			
            			dr1("StaffID") = 1
            			dr1("FirstName") = "Joe"
            			dr1("LastName") = "Schmo"
            			
            			dr2("StaffID") = 2
            			dr2("FirstName") = "Roger"
            			dr2("LastName") = "Rabbit"
            
            			dr3("StaffID") = 3
            			dr3("FirstName") = "Elmer"
            			dr3("LastName") = "Fudd"
            			
            			staffTbl.Rows.Add(dr1)
            			staffTbl.Rows.Add(dr2)
            			staffTbl.Rows.Add(dr3)
            			
            			' Bind the FaqRepeater to the dataset
            			FaqRepeater1.DataSource = staffTbl
            			FaqRepeater1.DataBind()
            			
            		End If
            	End Sub
            
            </head>
            <body>
            	<form runat="server">
            		<ew:FaqRepeater Runat="server" ID="FaqRepeater1">
            			<QuestionTemplate>
            				Q: What is your last name <%# DataBinder.Eval(Container.DataItem, "FirstName") %>?
            			</QuestionTemplate>
            			<AnswerTemplate>
            				A: My last name is <%# DataBinder.Eval(Container.DataItem, "LastName") %>.
            			</AnswerTemplate>
            			<SeparatorTemplate>
            				<hr>
            			</SeparatorTemplate>
            		</ew:FaqRepeater>
            	</form>
            </body>
            </html>
            
            [C#]
            <%@ Page Language="C#" %>
            <%@ Register TagPrefix="ew" Assembly="eWorld.UI" Namespace="eWorld.UI" Version=1.8.9.0, Culture=neutral, PublicKeyToken=24d65337282035f2" %>
            <html>
            <head>
            
            	<script language="C#" runat="server">
            	public void Page_Load(object sender, EventArgs e)
            	{
            		if(!Page.IsPostBack)
            		{
            		
            			// prepare the dataset
            			DataSet staffDs = new DataSet("StaffDataSet");
            			
            			DataTable staffTbl = staffDs.Tables.Add("Staff");
            			
            			staffTbl.Columns.Add("StaffID", typeof(Int32));
            			staffTbl.Columns.Add("FirstName", typeof(string));
            			staffTbl.Columns.Add("LastName", typeof(string));
            		
            			DataRow dr1 = staffTbl.NewRow();
            			DataRow dr2 = staffTbl.NewRow();
            			DataRow dr3 = staffTbl.NewRow();
            			
            			dr1["StaffID"] = 1;
            			dr1["FirstName"] = "Joe";
            			dr1["LastName"] = "Schmo";
            			
            			dr2["StaffID"] = 2;
            			dr2["FirstName"] = "Roger";
            			dr2["LastName"] = "Rabbit";
            
            			dr3["StaffID"] = 3;
            			dr3["FirstName"] = "Elmer";
            			dr3["LastName"] = "Fudd";
            			
            			staffTbl.Rows.Add(dr1);
            			staffTbl.Rows.Add(dr2);
            			staffTbl.Rows.Add(dr3);
            			
            			' Bind the FaqRepeater to the dataset
            			FaqRepeater1.DataSource = staffTbl;
            			FaqRepeater1.DataBind();
            			
            		}
            	}
            
            </head>
            <body>
            	<form runat="server">
            		<ew:FaqRepeater Runat="server" ID="FaqRepeater1">
            			<QuestionTemplate>
            				Q: What is your last name <%# DataBinder.Eval(Container.DataItem, "FirstName") %>?
            			</QuestionTemplate>
            			<AnswerTemplate>
            				A: My last name is <%# DataBinder.Eval(Container.DataItem, "LastName") %>.
            			</AnswerTemplate>
            			<SeparatorTemplate>
            				<hr>
            			</SeparatorTemplate>
            		</ew:FaqRepeater>
            	</form>
            </body>
            </html>
            ]]></code>
            </example>
        </member>
        <member name="M:eWorld.UI.FaqRepeater.OnItemCommand(eWorld.UI.FaqRepeaterCommandEventArgs)">
            <summary>
            Raises the ItemCommand event.
            </summary>
            <param name="e">The FaqRepeaterCommandEventArgs that contains the event data.</param>
        </member>
        <member name="M:eWorld.UI.FaqRepeater.OnItemCreated(eWorld.UI.FaqRepeaterItemEventArgs)">
            <summary>
            Raises the ItemCreated event.
            </summary>
            <param name="e">The FaqRepeaterItemEventArgs that contains the event data.</param>
        </member>
        <member name="M:eWorld.UI.FaqRepeater.OnItemDataBound(eWorld.UI.FaqRepeaterItemEventArgs)">
            <summary>
            Raises the ItemDataBound event.
            </summary>
            <param name="e">The FaqRepeaterItemEventArgs that contains the event data.</param>
        </member>
        <member name="M:eWorld.UI.FaqRepeater.CreateChildControls">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.CreateChildControls"/>.
            </summary>
        </member>
        <member name="M:eWorld.UI.FaqRepeater.CreateControlStyle">
            <summary>
            Overidden. See <see cref="M:System.Web.UI.WebControls.WebControl.CreateControlStyle"/>.
            </summary>
        </member>
        <member name="M:eWorld.UI.FaqRepeater.DataBind">
            <summary>
            Overidden. <see cref="M:System.Web.UI.Control.DataBind"/>.
            </summary>
        </member>
        <member name="M:eWorld.UI.FaqRepeater.LoadViewState(System.Object)">
            <summary>
            Restores view-state information from a previous page request that was saved by the SaveViewState method.
            </summary>
        </member>
        <member name="M:eWorld.UI.FaqRepeater.OnBubbleEvent(System.Object,System.EventArgs)">
            <summary>
            Overidden. See <see cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)"/>.
            </summary>
        </member>
        <member name="M:eWorld.UI.FaqRepeater.OnPreRender(System.EventArgs)">
            <summary>
            Overrides OnPreRender.
            </summary>
            <param name="e">The EventArguments.</param>
        </member>
        <member name="M:eWorld.UI.FaqRepeater.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided HtmlTextWriter object, which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The HtmlTextWriter object that receives the server control content.</param>
        </member>
        <member name="M:eWorld.UI.FaqRepeater.SaveViewState">
            <summary>
            Saves any server control view-state changes that have occurred since the time the page was posted back to the server.
            </summary>
            <returns>Returns the server control's current view state. If there is no view state associated with the control, this method returns a null reference (Nothing in Visual Basic).</returns>
        </member>
        <member name="M:eWorld.UI.FaqRepeater.TrackViewState">
            <summary>
            Causes tracking of view-state changes to the server control so they can be stored in the server control's StateBag object. This object is accessible through the Control.ViewState property.
            </summary>
        </member>
        <member name="P:eWorld.UI.FaqRepeater.QuestionStyle">
            <summary>
            Gets or sets the style of the question template.
            </summary>
        </member>
        <member name="P:eWorld.UI.FaqRepeater.AnswerStyle">
            <summary>
            Gets or sets the style of the answer template.
            </summary>
        </member>
        <member name="P:eWorld.UI.FaqRepeater.SeparatorStyle">
            <summary>
            Gets or sets the style of the separator template.
            </summary>
        </member>
        <member name="P:eWorld.UI.FaqRepeater.CellPadding">
            <summary>
            This gets or sets the cellpadding of the faq repeater.
            </summary>
            <value>
            The default value of this property is 2.
            </value>
        </member>
        <member name="P:eWorld.UI.FaqRepeater.CellSpacing">
            <summary>
            This gets or sets the cellspacing of the faq repeater.
            </summary>
            <value>
            The default value of this property is 0.
            </value>
        </member>
        <member name="P:eWorld.UI.FaqRepeater.DataSource">
            <summary>
            Gets or sets the data source that provides data for populating the list.
            </summary>
        </member>
        <member name="P:eWorld.UI.FaqRepeater.DataMember">
            <summary>
            Gets or sets the specific table in the DataSource to bind to the control.
            </summary>
        </member>
        <member name="P:eWorld.UI.FaqRepeater.QuestionTemplate">
            <summary>
            Gets or sets the template on how the question will be rendered.
            </summary>
            <remarks>
            Any data in this template will be converted into a hyperlink.  As such, you must have a plain string, with some data-bound columns.  You cannot
            nest tables, or add your own hyperlinks.
            </remarks>
        </member>
        <member name="P:eWorld.UI.FaqRepeater.AnswerTemplate">
            <summary>
            Gets or sets the template on how the answer will be rendered.
            </summary>
        </member>
        <member name="P:eWorld.UI.FaqRepeater.SeparatorTemplate">
            <summary>
            Gets or sets the template on how the separator will be rendered.
            </summary>
        </member>
        <member name="P:eWorld.UI.FaqRepeater.StartCollapsed">
            <summary>
            Gets or sets a boolean value indicating if the FaqRepeater Items will start collapsed.
            </summary>
            <value>
            The default value is true.
            </value>
        </member>
        <member name="P:eWorld.UI.FaqRepeater.Collapsable">
            <summary>
            Gets or sets a boolean value indicating if the FaqRepeater is collapsable.
            </summary>
            <value>
            The default value is true.
            </value>
        </member>
        <member name="P:eWorld.UI.FaqRepeater.CheckboxText">
            <summary>
            Gets or sets the text of the checkbox located at the top of the FaqRepeater.
            </summary>
            <value>
            The default value is "Expand/Collapse All Items"
            </value>
        </member>
        <member name="P:eWorld.UI.FaqRepeater.DisplayCheckbox">
            <summary>
            Gets or sets a boolean value indicating if the checkbox located at the top of the FaqRepeater is visible.
            </summary>
        </member>
        <member name="P:eWorld.UI.FaqRepeater.DisplaySingleItem">
            <summary>
            Gets or sets a boolean value indicating if only one faq item is expanded at a time.
            </summary>
        </member>
        <member name="P:eWorld.UI.FaqRepeater.UseExternalResource">
            <summary>
            Gets and Sets a value indicating if the external resource javascript file is used instead of inline Javascript.
            </summary>
        </member>
        <member name="P:eWorld.UI.FaqRepeater.ExternalResourcePath">
            <summary>
            Gets and Sets the path to the external resource javascript file.
            </summary>
        </member>
        <member name="E:eWorld.UI.FaqRepeater.ItemCommand">
            <summary>
            Occurs when a button is clicked in the FaqRepeater control.
            </summary>
            <remarks>
            This event is untested.
            </remarks>
        </member>
        <member name="E:eWorld.UI.FaqRepeater.ItemCreated">
            <summary>
            Occurs when an item is created in the FaqRepeater control.
            </summary>
        </member>
        <member name="E:eWorld.UI.FaqRepeater.ItemDataBound">
            <summary>
            Occurs when an item is data-bound in the FaqRepeater control.
            </summary>
        </member>
        <member name="T:eWorld.UI.FaqRepeaterItem">
            <summary>
            Represents an item in the FaqRepeater control.
            </summary>
        </member>
        <member name="M:eWorld.UI.FaqRepeaterItem.#ctor(System.Int32,eWorld.UI.ListItemType,System.Boolean)">
            <summary>
            Initializes a new instance of this FaqRepeaterItem class.
            </summary>
            <param name="itemIndex">The index of the item in the FaqRepeater control. </param>
            <param name="itemType">One of the eWorld.UI.ListItemType values. </param>
            <param name="collapsable">This particular item is collapsable.</param>
        </member>
        <member name="M:eWorld.UI.FaqRepeaterItem.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Overrides System.Web.UI.WebControls.TableRow.AddAttributesToRender.
            </summary>
        </member>
        <member name="M:eWorld.UI.FaqRepeaterItem.OnPreRender(System.EventArgs)">
            <summary>
            Overrides System.Web.UI.WebControls.TableRow.OnPreRender.
            </summary>
        </member>
        <member name="M:eWorld.UI.FaqRepeaterItem.OnBubbleEvent(System.Object,System.EventArgs)">
            <summary>
            Overrides System.Web.UI.WebControls.TableRow.OnBubbleEvent.
            </summary>
        </member>
        <member name="P:eWorld.UI.FaqRepeaterItem.DataItem">
            <summary>
            Gets or sets a data item associated with the FaqRepeaterItem object in the FaqRepeater control.
            </summary>
        </member>
        <member name="P:eWorld.UI.FaqRepeaterItem.ItemIndex">
            <summary>
            Gets the index of the item in the Repeater control.
            </summary>
        </member>
        <member name="P:eWorld.UI.FaqRepeaterItem.ItemType">
            <summary>
            Gets the type of the item in the FaqRepeater control.
            </summary>
        </member>
        <member name="T:eWorld.UI.FaqRepeaterCommandEventArgs">
            <summary>
            Provides data for the Command Event
            </summary>
        </member>
        <member name="M:eWorld.UI.FaqRepeaterCommandEventArgs.#ctor(eWorld.UI.FaqRepeaterItem,System.Object,System.Web.UI.WebControls.CommandEventArgs)">
            <summary>
            Initializes a new instance of the <b>FaqRepeaterCommandEventArgs</b> class.
            </summary>
            <param name="item">The FaqRepeaterItem raising the Command event.</param>
            <param name="commandSource">The source of the command.</param>
            <param name="originalArgs">The original arguments used for instantiating CommandEventArgs class.</param>
        </member>
        <member name="P:eWorld.UI.FaqRepeaterCommandEventArgs.Item">
            <summary>
            The FaqRepeaterItem that raised the Command event.
            </summary>
        </member>
        <member name="P:eWorld.UI.FaqRepeaterCommandEventArgs.CommandSource">
            <summary>
            The source of the command.
            </summary>
        </member>
        <member name="T:eWorld.UI.FaqRepeaterCommandEventHandler">
            <summary>
            Represents the method that will handle the <b>Command</b> event.
            </summary>
        </member>
        <member name="T:eWorld.UI.FaqRepeaterItemEventArgs">
            <summary>
            Provides data for the ItemCreated and ItemDataBound events of a FaqRepeater.
            </summary>
        </member>
        <member name="M:eWorld.UI.FaqRepeaterItemEventArgs.#ctor(eWorld.UI.FaqRepeaterItem)">
            <summary>
            Initializes a new instance of the FaqRepeaterItemEventArgs class.
            </summary>
            <param name="item">The FaqRepeaterItem associated with the event. The Item property is set to this value.</param>
        </member>
        <member name="P:eWorld.UI.FaqRepeaterItemEventArgs.Item">
            <summary>
            Gets the FaqRepeaterItem associated with the event.
            </summary>
        </member>
        <member name="T:eWorld.UI.FaqRepeaterItemEventHandler">
            <summary>
            Represents the method that will handle the <b>ItemCreated</b> and <b>ItemDataBound</b> events.
            </summary>
        </member>
        <member name="T:eWorld.UI.Design.FaqRepeaterDesigner">
            <summary>
            This is the HTML designer view for the faq repeater control.
            </summary>
        </member>
        <member name="M:eWorld.UI.Design.FaqRepeaterDesigner.GetDesignTimeHtml">
            <summary>
            Overrides <see cref="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml"/>
            </summary>
        </member>
        <member name="M:eWorld.UI.Design.FaqRepeaterDesigner.GetEmptyDesignTimeHtml">
            <summary>
            Overrides <see cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml"/>
            </summary>
        </member>
        <member name="M:eWorld.UI.Design.FaqRepeaterDesigner.GetErrorDesignTimeHtml(System.Exception)">
            <summary>
            Overrides <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)"/>
            </summary>
        </member>
        <member name="M:eWorld.UI.Design.FaqRepeaterDesigner.GetCachedTemplateEditingVerbs">
            <summary>
            Overrides TemplatedControlDesigner.GetCachedTemplateEditingVerbs
            </summary>
        </member>
        <member name="M:eWorld.UI.Design.FaqRepeaterDesigner.CreateTemplateEditingFrame(System.Web.UI.Design.TemplateEditingVerb)">
            <summary>
            Overrides <see cref="M:System.Web.UI.Design.TemplatedControlDesigner.CreateTemplateEditingFrame(System.Web.UI.Design.TemplateEditingVerb)"/>
            </summary>
        </member>
        <member name="M:eWorld.UI.Design.FaqRepeaterDesigner.GetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.Boolean@)">
            <summary>
            Overrides <see cref="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.Boolean@)"/>
            </summary>
        </member>
        <member name="M:eWorld.UI.Design.FaqRepeaterDesigner.SetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.String)">
            <summary>
            Overrides <see cref="M:System.Web.UI.Design.TemplatedControlDesigner.SetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.String)"/>
            </summary>
        </member>
        <member name="M:eWorld.UI.Design.FaqRepeaterDesigner.Dispose(System.Boolean)">
            <summary>
            Overrides <see cref="M:System.ComponentModel.Component.Dispose"/>
            </summary>
        </member>
        <member name="M:eWorld.UI.Design.FaqRepeaterDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Overrides <see cref="M:System.Web.UI.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)"/>
            </summary>
        </member>
        <member name="M:eWorld.UI.Design.FaqRepeaterDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
            <summary>
            Overrides <see cref="M:System.Web.UI.Design.TemplatedControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)"/>
            </summary>
        </member>
        <member name="P:eWorld.UI.Design.FaqRepeaterDesigner.AllowResize">
            <summary>
            Overrides <see cref="P:System.Web.UI.Design.ControlDesigner.AllowResize"/>
            </summary>
        </member>
        <member name="T:eWorld.UI.Holiday">
            <summary>
            Class used for defining holidays in the <see cref="T:eWorld.UI.CalendarPopup"/> control.
            </summary>
        </member>
        <member name="M:eWorld.UI.Holiday.#ctor(System.DateTime)">
            <summary>
            Instantiates a new instance of a Holiday.
            </summary>
            <param name="dateOfHoliday">The date of the holiday.</param>
        </member>
        <member name="M:eWorld.UI.Holiday.#ctor(System.DateTime,System.Boolean)">
            <summary>
            Instantiates a new instance of a Holiday.
            </summary>
            <param name="dateOfHoliday">The date of the holiday.</param>
            <param name="spanAcrossYears">Value indicating if it spans across multiple years.</param>
        </member>
        <member name="M:eWorld.UI.Holiday.TrackViewState">
            <summary>
            Implements <see cref="M:System.Web.UI.IStateManager.TrackViewState"/>
            </summary>
        </member>
        <member name="M:eWorld.UI.Holiday.SaveViewState">
            <summary>
            Implements <see cref="M:System.Web.UI.IStateManager.SaveViewState"/>
            </summary>
            <returns>The saved viewstate.</returns>
        </member>
        <member name="M:eWorld.UI.Holiday.LoadViewState(System.Object)">
            <summary>
            Implements <see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)"/>
            </summary>
            <param name="state">The state to load.</param>
        </member>
        <member name="P:eWorld.UI.Holiday.ViewState">
            <summary>
            Gets a custom view state bag for storing this controls information required for retaining state.
            </summary>
        </member>
        <member name="P:eWorld.UI.Holiday.DateOfHoliday">
            <summary>
            Gets and Sets the date of the holiday.
            </summary>
        </member>
        <member name="P:eWorld.UI.Holiday.SpanAcrossYears">
            <summary>
            Gets and Sets a value indicating if this holiday will span across multiple years.
            </summary>
        </member>
        <member name="P:eWorld.UI.Holiday.System#Web#UI#IStateManager#IsTrackingViewState">
            <summary>
            Implements <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState"/>.
            </summary>
        </member>
        <member name="T:eWorld.UI.HolidayCollection">
            <summary>
            Collection of <see cref="T:eWorld.UI.Holiday"/>'s.
            </summary>
        </member>
        <member name="M:eWorld.UI.HolidayCollection.#ctor">
            <summary>
            Creates a new instance of <see cref="T:eWorld.UI.HolidayCollection"/>
            </summary>
        </member>
        <member name="M:eWorld.UI.HolidayCollection.Add(System.DateTime)">
            <summary>
            Adds a new date to the holiday collection.
            </summary>
            <param name="dateOfHoliday">The date to add as a holiday.</param>
            <returns>The index where this holiday was added.</returns>
        </member>
        <member name="M:eWorld.UI.HolidayCollection.Add(System.DateTime,System.Boolean)">
            <summary>
            Adds a new date to the holiday collection.
            </summary>
            <param name="dateOfHoliday">The date to add as a holiday.</param>
            <param name="spanAcrossYears">Value indicating if this date will span across years.</param>
            <returns>The index where this holiday was added.</returns>
        </member>
        <member name="M:eWorld.UI.HolidayCollection.Add(eWorld.UI.Holiday)">
            <summary>
            Adds a new holiday to the collection.
            </summary>
            <param name="holiday">The holiday to add.</param>
            <returns>The index where this holiday was added.</returns>
        </member>
        <member name="M:eWorld.UI.HolidayCollection.AddRange(eWorld.UI.Holiday[])">
            <summary>
            Adds a range of <see cref="T:eWorld.UI.Holiday"/>'s to the collection.
            </summary>
            <param name="holidays"></param>
        </member>
        <member name="M:eWorld.UI.HolidayCollection.Insert(System.Int32,eWorld.UI.Holiday)">
            <summary>
            Inserts a <see cref="T:eWorld.UI.Holiday"/> into the collection at the specified index.
            </summary>
            <param name="index">The index where the <see cref="T:eWorld.UI.Holiday"/> is to be inserted.</param>
            <param name="holiday">The <see cref="T:eWorld.UI.Holiday"/> to be inserted.</param>
        </member>
        <member name="M:eWorld.UI.HolidayCollection.Insert(System.Int32,System.DateTime)">
            <summary>
            Inserts a new date into the holiday collection at the specified index.
            </summary>
            <param name="index">The index where the date of the holiday is to be inserted.</param>
            <param name="dateOfHoliday">The date to be inserted.</param>
        </member>
        <member name="M:eWorld.UI.HolidayCollection.Insert(System.Int32,System.DateTime,System.Boolean)">
            <summary>
            Inserts a new date into the holiday collection at the specified index.
            </summary>
            <param name="index">The index where the date of the holiday is to be inserted.</param>
            <param name="dateOfHoliday">The date to be inserted.</param>
            <param name="spanAcrossYears">Boolean value indicating if the date should span across years.</param>
        </member>
        <member name="M:eWorld.UI.HolidayCollection.Remove(eWorld.UI.Holiday)">
            <summary>
            Removes a <see cref="T:eWorld.UI.Holiday"/> from this collection.
            </summary>
            <param name="holiday">The <see cref="T:eWorld.UI.Holiday"/> to remove.</param>
        </member>
        <member name="M:eWorld.UI.HolidayCollection.Remove(System.DateTime)">
            <summary>
            Removes a date from the holiday collection.
            </summary>
            <param name="dateToRemove">The date to remove.</param>
        </member>
        <member name="M:eWorld.UI.HolidayCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a <see cref="T:eWorld.UI.Holiday"/> at the specified index.
            </summary>
            <param name="index">The index of the holiday to be removed.</param>
        </member>
        <member name="M:eWorld.UI.HolidayCollection.Clear">
            <summary>
            Clears the collection of all <see cref="T:eWorld.UI.Holiday"/> items.
            </summary>
        </member>
        <member name="M:eWorld.UI.HolidayCollection.IndexOf(eWorld.UI.Holiday)">
            <summary>
            Retrieves the index of the specified <see cref="T:eWorld.UI.Holiday"/>.
            </summary>
            <param name="holiday">The holiday to find.</param>
            <returns>The index of the holiday.</returns>
        </member>
        <member name="M:eWorld.UI.HolidayCollection.IndexOf(System.DateTime)">
            <summary>
            Retrieves the index of the specified date.
            </summary>
            <param name="dateOfHoliday">The date to find the index of.</param>
            <returns>The index of the holiday.</returns>
        </member>
        <member name="M:eWorld.UI.HolidayCollection.GetEnumerator">
            <summary>
            Gets an enumerator of this holiday collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eWorld.UI.HolidayCollection.Reset">
            <summary>
            Resets the collection to the begining of the collection.
            </summary>
        </member>
        <member name="M:eWorld.UI.HolidayCollection.MoveNext">
            <summary>
            Moves the enumerator to the next object in the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eWorld.UI.HolidayCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copys this collection to an array.
            </summary>
            <param name="array">The array to copy this holiday collection to.</param>
            <param name="index">The index to start at</param>
        </member>
        <member name="M:eWorld.UI.HolidayCollection.TrackViewState">
            <summary>
            Implements <see cref="M:System.Web.UI.IStateManager.TrackViewState"/>.
            </summary>
        </member>
        <member name="M:eWorld.UI.HolidayCollection.SaveViewState">
            <summary>
            Implements <see cref="M:System.Web.UI.IStateManager.SaveViewState"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:eWorld.UI.HolidayCollection.LoadViewState(System.Object)">
            <summary>
            Implements <see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)"/>
            </summary>
            <param name="state"></param>
        </member>
        <member name="P:eWorld.UI.HolidayCollection.Item(System.Int32)">
            <summary>
            Gets a <see cref="T:eWorld.UI.Holiday"/> at the corresponding index in the collection.
            </summary>
        </member>
        <member name="P:eWorld.UI.HolidayCollection.Item(System.DateTime)">
            <summary>
            Gets a <see cref="T:eWorld.UI.Holiday"/> with the corresponding date.
            </summary>
        </member>
        <member name="P:eWorld.UI.HolidayCollection.Current">
            <summary>
            Gets the <see cref="T:eWorld.UI.Holiday"/> object that we're currently on.
            </summary>
        </member>
        <member name="P:eWorld.UI.HolidayCollection.Count">
            <summary>
            Gets the number of items located in this collection.
            </summary>
        </member>
        <member name="P:eWorld.UI.HolidayCollection.IsSynchronized">
            <summary>
            Gets a value indicating if this colleciton is synchronized.
            </summary>
        </member>
        <member name="P:eWorld.UI.HolidayCollection.SyncRoot">
            <summary>
            Gets a value indicating the SyncRoot.
            </summary>
        </member>
        <member name="P:eWorld.UI.HolidayCollection.IsTrackingViewState">
            <summary>
            Implements <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState"/>
            </summary>
        </member>
        <member name="T:eWorld.UI.HolidayAlreadyAddedException">
            <summary>
            Exception thrown when a holiday has already been added to the collection.
            </summary>
        </member>
        <member name="M:eWorld.UI.HolidayAlreadyAddedException.#ctor">
            <summary>
            Instantiates a new <see cref="T:eWorld.UI.HolidayAlreadyAddedException"/> with a default message.
            </summary>
        </member>
        <member name="M:eWorld.UI.HolidayAlreadyAddedException.#ctor(System.String)">
            <summary>
            Instantiates a new <see cref="T:eWorld.UI.HolidayAlreadyAddedException"/> with a defined message.
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:eWorld.UI.MaskedTextBox">
            <summary>
            The Masked Text Box control is an easy to use, multi-browser control that will
            allow you to easily add a masked entry box to your web forms.  It uses javascript
            to determine if the character being entered in is a valid character.
            </summary>
            <remarks>
            Use the <b>Masked Text Box</b> control to display a single text box that allows your
            client to enter valid data according to a mask that you define.  It is cross-browser 
            enabled, except for Netscape 4 and below.  A user with this type of browser has no 
            limitations on what they can supply, but when the data is posted back to the server, 
            verified against a validation expression if one is defined.
            
            This control works best when you define a Validation Expression, in the form of a
            regular expression.  When the Validate property is true, and the ValidationExpression
            property have been set, this control will only allow valid data.
            
            <list type="table">
            <listheader>
            <term>Valid Character(s)</term>
            <description>Description</description></listheader>
            <item><term>c, C</term><description>Represents an alpha character</description></item>
            <item><term>9</term><description>Represents a numeric character</description></item>
            <item><term>@, $, %, (, ), -, {, }, [, ], ;, :, ', ", , (comma), ., /, _, =, +, and a space</term><description>Special Character - matched exactly</description></item>
            </list>
            </remarks>
            <example>
            <code><![CDATA[
            <%@ Register TagPrefix="eworld" Assembly="eWorld.UI, Version=1.9.0.0, Culture=neutral, PublicKeyToken=24d65337282035f2" Namespace="eWorld.UI"%>
            <html>
            <head>
            
            </head>
            <body>
            	<form runat="server">
            		<eworld:MaskedTextBox id="maskedTextBox1" runat="server" Mask="(999) 999-999" ValidationExpression="((\(\d{3}\) ?)|(\d{3}-))?\d{3}-\d{4}" ErrorMessage="Invalid Phone Number"/>
            		<eWorld:MaskedTextBox id="maskedTextBox2" runat="server" Mask="999-99-9999" ValidationExpression="\d{3}-\d{2}-\d{4}" ErrorMessage="Invalid SSN" />
            	</form>
            </body>
            </html>
            ]]></code>
            </example>
        </member>
        <member name="M:eWorld.UI.MaskedTextBox.OnTextChanged(System.EventArgs)">
            <summary>
            This invokes the text changed event.  This is called whenever the text is changed.
            </summary>
            <param name="e">The event arguments passed in whenever the date has changed.</param>
        </member>
        <member name="M:eWorld.UI.MaskedTextBox.#ctor">
            <summary>
            Instantiates a new instance of the Masked Textbox
            </summary>
        </member>
        <member name="M:eWorld.UI.MaskedTextBox.OnInit(System.EventArgs)">
            <summary>
            Overrides System.Web.UI.WebControls.WebControl.OnInit
            </summary>
            <param name="e">The event arguments for this controls creation.</param>
        </member>
        <member name="M:eWorld.UI.MaskedTextBox.CreateChildControls">
            <summary>
            Overrides System.Web.UI.WebControls.WebControl.CreateChildControls
            </summary>
        </member>
        <member name="M:eWorld.UI.MaskedTextBox.OnPreRender(System.EventArgs)">
            <summary>
            OVerrides <see cref="M:System.Web.UI.WebControls.TextBox.OnPreRender(System.EventArgs)"/>
            </summary>
            <param name="e">The event arguments for this controls creation..</param>
        </member>
        <member name="M:eWorld.UI.MaskedTextBox.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Renders this control to the output.
            </summary>
            <param name="output"> The HTML writer to write out to </param>
        </member>
        <member name="M:eWorld.UI.MaskedTextBox.LoadViewState(System.Object)">
            <summary>
            Overrides LoadViewState.
            </summary>
            <param name="savedState"></param>
        </member>
        <member name="M:eWorld.UI.MaskedTextBox.SaveViewState">
            <summary>
            Overrides SaveViewState.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eWorld.UI.MaskedTextBox.TrackViewState">
            <summary>
            Overrides TrackViewState.
            </summary>
        </member>
        <member name="M:eWorld.UI.MaskedTextBox.GetRawText">
            <summary>
            This method will take the text and remove all non alpha-numeric characters from the string.
            </summary>
            <returns>The formatted string containing all alpha-numeric charachters.</returns>
        </member>
        <member name="M:eWorld.UI.MaskedTextBox.ApplyMask(System.String)">
            <summary>
            Applies the mask to the current text in the textbox.
            </summary>
        </member>
        <member name="E:eWorld.UI.MaskedTextBox.TextChanged">
            <summary>
            This is the event that fires whenever the selected date has changed in the control 
            from the particular post backs.
            </summary>
        </member>
        <member name="P:eWorld.UI.MaskedTextBox.Text">
            <summary>
            Gets or sets the value of the textbox.
            </summary>
        </member>
        <member name="P:eWorld.UI.MaskedTextBox.StrippedText">
            <summary>
            Gets the entered text without the mask.
            </summary>
        </member>
        <member name="P:eWorld.UI.MaskedTextBox.MaxLength">
            <summary>
            Gets or sets the maximum length for the textbox.
            </summary>
        </member>
        <member name="P:eWorld.UI.MaskedTextBox.Mask">
            <summary>
            Gets or sets the mask for this textbox, in which the client must abide by.
            </summary>
        </member>
        <member name="P:eWorld.UI.MaskedTextBox.Validate">
            <summary>
            Gets or sets a value indicating if this masked control will need to add a regular expressions validator.
            </summary>
        </member>
        <member name="P:eWorld.UI.MaskedTextBox.ValidationExpression">
            <summary>
            Gets or sets the validation expression to use with regular expressions validator.
            </summary>
        </member>
        <member name="P:eWorld.UI.MaskedTextBox.ErrorMessage">
            <summary>
            Gets or sets the error message that is displayed to the user.
            </summary>
        </member>
        <member name="P:eWorld.UI.MaskedTextBox.ErrorText">
            <summary>
            Gets or sets the error text that is displayed to the user. If empty, it takes on the value of <see cref="P:eWorld.UI.MaskedTextBox.ErrorMessage"/>.
            </summary>
        </member>
        <member name="P:eWorld.UI.MaskedTextBox.AutoPostBack">
            <summary>
            Gets or sets a value indicating if the masked textbox will auto postback.
            </summary>
        </member>
        <member name="P:eWorld.UI.MaskedTextBox.AutoFillMask">
            <summary>
            Gets and sets a value idicating if you wish the non numeric or character data will be entered automatically.
            </summary>
        </member>
        <member name="P:eWorld.UI.MaskedTextBox.ReadOnly">
            <summary>
            Gets and sets a value indicating if the text is read-only in the textbox.
            </summary>
        </member>
        <member name="P:eWorld.UI.MaskedTextBox.UseExternalResource">
            <summary>
            Gets and Sets a value indicating if the external resource javascript file is used instead of inline Javascript.
            </summary>
        </member>
        <member name="P:eWorld.UI.MaskedTextBox.ExternalResourcePath">
            <summary>
            Gets and Sets the path to the external resource javascript file.
            </summary>
        </member>
        <member name="P:eWorld.UI.MaskedTextBox.IsRequired">
            <summary>
            Gets and Sets a value indicating if a required field validator is added.
            </summary>
        </member>
        <member name="P:eWorld.UI.MaskedTextBox.RequiredErrorMessage">
            <summary>
            Gets and Sets the required field validator error message.
            </summary>
        </member>
        <member name="P:eWorld.UI.MaskedTextBox.RequiredErrorText">
            <summary>
            Gets and Sets the required field validator error text.
            </summary>
        </member>
        <member name="P:eWorld.UI.MaskedTextBox.ValidatorStyle">
            <summary>
            Gets the style of the regular expression and required field validators.
            </summary>
        </member>
        <member name="P:eWorld.UI.MaskedTextBox.ClientID">
            <summary>
            Overriden. Gets the client id of the textbox.
            </summary>
        </member>
        <member name="T:eWorld.UI.Design.MaskedTextBoxDesigner">
            <summary>
            Design time control for the Masked Textbox
            </summary>
        </member>
        <member name="M:eWorld.UI.Design.MaskedTextBoxDesigner.GetDesignTimeHtml">
            <summary>
            This will build the html designer view of the numeric box control.
            </summary>
            <returns>The html generated for the numeric box control.</returns>
        </member>
        <member name="T:eWorld.UI.MultiTextDropDownList">
            <summary>
            The Multi Text Drop Down List allows you to bind the text displayed to one or two data columns.
            This new functionality eases the problems experienced when retrieving data from a datasource
            where, for instance, first name and last name are different fields.  This allows you to combine
            them without having to do major amounts of database/drop down list manipulation.
            </summary>
            <remarks>
            Use the <b>Multi Text Drop Down List</b> to display up to two columns in the text property for a
            list item.  Control is browser independant because all rendering is done on the server side.
            </remarks>
            <example>
            <code><![CDATA[
            [Visual Basic]
            <%@ Page Language="VB" %>
            <%@ Register TagPrefix="eworld" Assembly="eWorld.UI, Version=1.9.0.0, Culture=neutral, PublicKeyToken=24d65337282035f2" Namespace="eWorld.UI" %>
            <html>
            <head>
            
            	<script language="VB" runat="server">
            	Sub Page_Load(sender As Object, e As EventArgs)
            		If Not Page.IsPostBack Then
            		
            			'Prepare the Dataset
            			Dim staffDs As New DataSet("StaffDataSet")
            			
            			Dim staffTbl As DataTable = staffDs.Tables.Add("Staff")
            			
            			staffTbl.Columns.Add("StaffID", Type.GetType("System.Int32"))
            			staffTbl.Columns.Add("FirstName", Type.GetType("System.String"))
            			staffTbl.Columns.Add("LastName", Type.GetType("System.String"))
            			
            			Dim dr1 As DataRow = staffTbl.NewRow()
            			Dim dr2 As DataRow = staffTbl.NewRow()
            			Dim dr3 As DataRow = staffTbl.NewRow()
            			
            			dr1("StaffID") = 1
            			dr1("FirstName") = "Joe"
            			dr1("LastName") = "Schmo"
            			
            			dr2("StaffID") = 2
            			dr2("FirstName") = "Roger"
            			dr2("LastName") = "Rabbit"
            
            			dr3("StaffID") = 3
            			dr3("FirstName") = "Elmer"
            			dr3("LastName") = "Fudd"
            			
            			staffTbl.Rows.Add(dr1)
            			staffTbl.Rows.Add(dr2)
            			staffTbl.Rows.Add(dr3)
            			
            			' Bind the DropDownList to the dataset
            			MultiTextDropDownList1.DataSource = staffDs
            			MultiTextDropDownList1.DataTextFormatString = "First: {0} Last: {1}"
            			MultiTextDropDownList1.DataTextFields = "FirstName, LastName"
            			MultiTextDropDownList1.DataValueField = "StaffID"
            			MultiTextDropDownList1.DataBind()
            			
            		End If
            	End Sub
            
            </head>
            <body>
            	<form runat="server">
            		<eworld:MultiTextDropDownList id="MultiTextDropDownList1" runat="server" />
            	</form>
            </body>
            </html>
            
            [C#]
            <%@ Page Language="C#" %>
            <%@ Register TagPrefix="eworld" Assembly="eWorld.UI, Version=1.9.0.0, Culture=neutral, PublicKeyToken=24d65337282035f2" Namespace="eWorld.UI"%>
            <html>
            <head>
            
            	<script language="C#" runat="server">
            	public void Page_Load(object sender, EventArgs e)
            	{
            		if(!Page.IsPostBack)
            		{
            		
            			// prepare the dataset
            			DataSet staffDs = new DataSet("StaffDataSet");
            			
            			DataTable staffTbl = staffDs.Tables.Add("Staff");
            			
            			staffTbl.Columns.Add("StaffID", typeof(Int32));
            			staffTbl.Columns.Add("FirstName", typeof(string));
            			staffTbl.Columns.Add("LastName", typeof(string));
            		
            			DataRow dr1 = staffTbl.NewRow();
            			DataRow dr2 = staffTbl.NewRow();
            			DataRow dr3 = staffTbl.NewRow();
            			
            			dr1["StaffID"] = 1;
            			dr1["FirstName"] = "Joe";
            			dr1["LastName"] = "Schmo";
            			
            			dr2["StaffID"] = 2;
            			dr2["FirstName"] = "Roger";
            			dr2["LastName"] = "Rabbit";
            
            			dr3["StaffID"] = 3;
            			dr3["FirstName"] = "Elmer";
            			dr3["LastName"] = "Fudd";
            			
            			staffTbl.Rows.Add(dr1);
            			staffTbl.Rows.Add(dr2);
            			staffTbl.Rows.Add(dr3);
            			
            			// Bind the DropDownList to the dataset
            			MultiTextDropDownList1.DataSource = staffDs;
            			MultiTextDropDownList1.DataTextFormatString = "First: {0} Last: {1}";
            			MultiTextDropDownList1.DataTextFields = "FirstName, LastName";
            			MultiTextDropDownList1.DataValueField = "StaffID";
            			MultiTextDropDownList1.DataBind();
            			
            		}
            	}
            
            </head>
            <body>
            	<form runat="server">
            		<eworld:MultiTextDropDownList id="MultiTextDropDownList1" runat="server" />
            	</form>
            </body>
            </html>
            ]]></code>
            </example>
        </member>
        <member name="M:eWorld.UI.MultiTextDropDownList.ItemExists(System.String,System.Boolean)">
            <summary>
            Checks to see if the value or text specified is contained within the items collection.
            </summary>
            <param name="value">The value or text of the list item to be searched for.</param>
            <param name="searchByValue">Boolean value indicating you wish to search by value or by text.</param>
            <returns>Boolean value indicating if the list item was found.</returns>
        </member>
        <member name="M:eWorld.UI.MultiTextDropDownList.ItemExists(System.String)">
            <summary>
            Checks to see if the value or text specified is contained within the items collection.
            </summary>
            <param name="value">The value of the list item to be searched for.</param>
            <returns>Boolean value indicating if the list item was found.</returns>
        </member>
        <member name="M:eWorld.UI.MultiTextDropDownList.SelectItemByText(System.String)">
            <summary>
            Selects a list item that is determined by the text.  Nothing is processed if
            the text is not found.
            </summary>
            <param name="text">The text of the list item to be selected.</param>
        </member>
        <member name="M:eWorld.UI.MultiTextDropDownList.SelectItemByValue(System.String)">
            <summary>
            Selects a list item that is determined by the value.  Nothing is processed if
            the value is not found.
            </summary>
            <param name="value">The value of the list item to be selected.</param>
        </member>
        <member name="M:eWorld.UI.MultiTextDropDownList.OnDataBinding(System.EventArgs)">
            <summary>
            Overridden See <see cref="M:System.Web.UI.Control.OnDataBinding(System.EventArgs)"/>.
            </summary>
        </member>
        <member name="P:eWorld.UI.MultiTextDropDownList.DataTextFieldAdditional">
            <summary>
            Gets and Sets the field name that should be used for the additional
            text of the list item.
            </summary>
        </member>
        <member name="P:eWorld.UI.MultiTextDropDownList.DataTextFieldSeparator">
            <summary>
            Gets and Sets the separator value that will be placed between
            the two text fields.
            </summary>
        </member>
        <member name="P:eWorld.UI.MultiTextDropDownList.DataTextFields">
            <summary>
            Gets and sets a comma delimited list of fields you wish to use with conjunction with the DataTextFormatString.
            </summary>
        </member>
        <member name="T:eWorld.UI.MultiTextListBox">
            <summary>
            The Multi Text List Box allows you to bind the text displayed to one or two data columns.
            This new functionality eases the problems experienced when retrieving data from a datasource
            where, for instance, first name and last name are different fields.  This allows you to combine
            them without having to do major amounts of database/drop down list manipulation.
            </summary>
            <remarks>
            Use the <b>Multi Text List Box</b> to display up to two columns in the text property for a
            list item.  Control is browser independant because all rendering is done on the server side.
            </remarks>
            <example>
            <code><![CDATA[
            [Visual Basic]
            <%@ Page Language="VB" %>
            <%@ Register TagPrefix="eworld" Assembly="eWorld.UI, Version=1.9.0.0, Culture=neutral, PublicKeyToken=24d65337282035f2" Namespace="eWorld.UI" %>
            <html>
            <head>
            
            	<script language="VB" runat="server">
            	Sub Page_Load(sender As Object, e As EventArgs)
            		If Not Page.IsPostBack Then
            		
            			'Prepare the Dataset
            			Dim staffDs As New DataSet("StaffDataSet")
            			
            			Dim staffTbl As DataTable = staffDs.Tables.Add("Staff")
            			
            			staffTbl.Columns.Add("StaffID", Type.GetType("System.Int32"))
            			staffTbl.Columns.Add("FirstName", Type.GetType("System.String"))
            			staffTbl.Columns.Add("LastName", Type.GetType("System.String"))
            			
            			Dim dr1 As DataRow = staffTbl.NewRow()
            			Dim dr2 As DataRow = staffTbl.NewRow()
            			Dim dr3 As DataRow = staffTbl.NewRow()
            			
            			dr1("StaffID") = 1
            			dr1("FirstName") = "Joe"
            			dr1("LastName") = "Schmo"
            			
            			dr2("StaffID") = 2
            			dr2("FirstName") = "Roger"
            			dr2("LastName") = "Rabbit"
            
            			dr3("StaffID") = 3
            			dr3("FirstName") = "Elmer"
            			dr3("LastName") = "Fudd"
            			
            			staffTbl.Rows.Add(dr1)
            			staffTbl.Rows.Add(dr2)
            			staffTbl.Rows.Add(dr3)
            			
            			' Bind the ListBox to the dataset
            			MultiTextListBox1.DataSource = staffDs
            			MultiTextDropDownList1.DataTextFormatString = "First: {0} Last: {1}"
            			MultiTextDropDownList1.DataTextFields = "FirstName, LastName"
            			MultiTextListBox1.DataValueField = "StaffID"
            			MultiTextListBox1.DataBind()
            			
            		End If
            	End Sub
            
            </head>
            <body>
            	<form runat="server">
            		<eworld:MultiTextListBox id="MultiTextListBox1" runat="server" />
            	</form>
            </body>
            </html>
            
            [C#]
            <%@ Page Language="C#" %>
            <%@ Register TagPrefix="eworld" Assembly="eWorld.UI, Version=1.9.0.0, Culture=neutral, PublicKeyToken=24d65337282035f2" Namespace="eWorld.UI" %>
            <html>
            <head>
            
            	<script language="C#" runat="server">
            	public void Page_Load(object sender, EventArgs e)
            	{
            		if(!Page.IsPostBack)
            		{
            		
            			// prepare the dataset
            			DataSet staffDs = new DataSet("StaffDataSet");
            			
            			DataTable staffTbl = staffDs.Tables.Add("Staff");
            			
            			staffTbl.Columns.Add("StaffID", typeof(Int32));
            			staffTbl.Columns.Add("FirstName", typeof(string));
            			staffTbl.Columns.Add("LastName", typeof(string));
            		
            			DataRow dr1 = staffTbl.NewRow();
            			DataRow dr2 = staffTbl.NewRow();
            			DataRow dr3 = staffTbl.NewRow();
            			
            			dr1["StaffID"] = 1;
            			dr1["FirstName"] = "Joe";
            			dr1["LastName"] = "Schmo";
            			
            			dr2["StaffID"] = 2;
            			dr2["FirstName"] = "Roger";
            			dr2["LastName"] = "Rabbit";
            
            			dr3["StaffID"] = 3;
            			dr3["FirstName"] = "Elmer";
            			dr3["LastName"] = "Fudd";
            			
            			staffTbl.Rows.Add(dr1);
            			staffTbl.Rows.Add(dr2);
            			staffTbl.Rows.Add(dr3);
            			
            			// Bind the ListBox to the dataset
            			MultiTextListBox1.DataSource = staffDs;
            			MultiTextDropDownList1.DataTextFormatString = "First: {0} Last: {1}";
            			MultiTextDropDownList1.DataTextFields = "FirstName, LastName";
            			MultiTextListBox1.DataValueField = "StaffID";
            			MultiTextListBox1.DataBind();
            			
            		}
            	}
            
            </head>
            <body>
            	<form runat="server">
            		<eworld:MultiTextListBox id="MultiTextListBox1" runat="server" />
            	</form>
            </body>
            </html>
            ]]></code>
            </example>
            
        </member>
        <member name="M:eWorld.UI.MultiTextListBox.OnDataBinding(System.EventArgs)">
            <summary>
            Overridden See <see cref="M:System.Web.UI.Control.OnDataBinding(System.EventArgs)"/>.
            </summary>
        </member>
        <member name="M:eWorld.UI.MultiTextListBox.ItemExists(System.String,System.Boolean)">
            <summary>
            Checks to see if the value or text specified is contained within the items collection.
            </summary>
            <param name="value">The value or text of the list item to be searched for.</param>
            <param name="searchByValue">Boolean value indicating you wish to search by value or by text.</param>
            <returns>Boolean value indicating if the list item was found.</returns>
        </member>
        <member name="M:eWorld.UI.MultiTextListBox.ItemExists(System.String)">
            <summary>
            Checks to see if the value or text specified is contained within the items collection.
            </summary>
            <param name="value">The value of the list item to be searched for.</param>
            <returns>Boolean value indicating if the list item was found.</returns>
        </member>
        <member name="M:eWorld.UI.MultiTextListBox.SelectItemByText(System.String)">
            <summary>
            Selects a single list item that is determined by the text.  Nothing is processed if
            the text is not found.
            </summary>
            <param name="text">The text of the list item to be selected.</param>
        </member>
        <member name="M:eWorld.UI.MultiTextListBox.SelectItemByText(System.String[])">
            <summary>
            Selects any number list items based on the text.  If the list box is not allowing
            multiple selections, only the first text item in the array is used.
            </summary>
            <param name="textArray">A string array of the list items text fields to be selected.</param>
        </member>
        <member name="M:eWorld.UI.MultiTextListBox.SelectItemByValue(System.String)">
            <summary>
            Selects a single list item that is determined by the value.  Nothing is processed if
            the value is not found.
            </summary>
            <param name="value">The value of the list item to be selected.</param>
        </member>
        <member name="M:eWorld.UI.MultiTextListBox.SelectItemByValue(System.String[])">
            <summary>
            Selects any number list items based on the value.  If the list box is not allowing
            multiple selections, only the first value item in the array is used.
            </summary>
            <param name="valueArray">A string array of the list items value fields to be selected.</param>
        </member>
        <member name="P:eWorld.UI.MultiTextListBox.DataTextFieldAdditional">
            <summary>
            Gets and Sets the field name that should be used for the additional
            text of the list item.
            </summary>
        </member>
        <member name="P:eWorld.UI.MultiTextListBox.DataTextFieldSeparator">
            <summary>
            Gets and Sets the separator value that will be placed between
            the two text fields.
            </summary>
        </member>
        <member name="P:eWorld.UI.MultiTextListBox.DataTextFields">
            <summary>
            Gets and sets a comma delimited list of fields you wish to use with conjunction with the DataTextFormatString.
            </summary>
        </member>
        <member name="T:eWorld.UI.NewMaskedTextBox">
            <summary>
            The Masked Text Box control is an easy to use, multi-browser control that will
            allow you to easily add a masked entry box to your web forms.  It uses javascript
            to determine if the character being entered in is a valid character.
            </summary>
            <remarks>
            Use the <b>Masked Text Box</b> control to display a single text box that allows your
            client to enter valid data according to a mask that you define.  It is cross-browser 
            enabled, except for Netscape 4 and below.  A user with this type of browser has no 
            limitations on what they can supply, but when the data is posted back to the server, 
            verified against a validation expression if one is defined.
            
            This control works best when you define a Validation Expression, in the form of a
            regular expression.  When the Validate property is true, and the ValidationExpression
            property have been set, this control will only allow valid data.
            
            <list type="table">
            <listheader>
            <term>Valid Character(s)</term>
            <description>Description</description></listheader>
            <item><term>c, C</term><description>Represents an alpha character</description></item>
            <item><term>9</term><description>Represents a numeric character</description></item>
            <item><term>@, $, %, (, ), -, {, }, [, ], ;, :, ', ", , (comma), ., /, _, =, +, and a space</term><description>Special Character - matched exactly</description></item>
            </list>
            </remarks>
            <example>
            <code><![CDATA[
            <%@ Register TagPrefix="eworld" Assembly="eWorld.UI, Version=1.9.0.0, Culture=neutral, PublicKeyToken=24d65337282035f2" Namespace="eWorld.UI"%>
            <html>
            <head>
            
            </head>
            <body>
            	<form runat="server">
            		<eworld:NewMaskedTextBox id="NewMaskedTextBox1" runat="server" Mask="(999) 999-999" ValidationExpression="((\(\d{3}\) ?)|(\d{3}-))?\d{3}-\d{4}" ErrorMessage="Invalid Phone Number"/>
            		<eWorld:NewMaskedTextBox id="NewMaskedTextBox2" runat="server" Mask="999-99-9999" ValidationExpression="\d{3}-\d{2}-\d{4}" ErrorMessage="Invalid SSN" />
            	</form>
            </body>
            </html>
            ]]></code>
            </example>
        </member>
        <member name="M:eWorld.UI.NewMaskedTextBox.OnTextChanged(System.EventArgs)">
            <summary>
            This invokes the text changed event.  This is called whenever the text is changed.
            </summary>
            <param name="e">The event arguments passed in whenever the date has changed.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:eWorld.UI.NewMaskedTextBox.#ctor" -->
        <member name="M:eWorld.UI.NewMaskedTextBox.OnInit(System.EventArgs)">
            <summary>
            Overrides System.Web.UI.WebControls.WebControl.OnInit
            </summary>
            <param name="e">The event arguments for this controls creation.</param>
        </member>
        <member name="M:eWorld.UI.NewMaskedTextBox.CreateChildControls">
            <summary>
            Overrides System.Web.UI.WebControls.WebControl.CreateChildControls
            </summary>
        </member>
        <member name="M:eWorld.UI.NewMaskedTextBox.OnPreRender(System.EventArgs)">
            <summary>
            OVerrides <see cref="M:System.Web.UI.WebControls.TextBox.OnPreRender(System.EventArgs)"/>
            </summary>
            <param name="e">The event arguments for this controls creation..</param>
        </member>
        <member name="M:eWorld.UI.NewMaskedTextBox.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Renders this control to the output.
            </summary>
            <param name="output"> The HTML writer to write out to </param>
        </member>
        <member name="M:eWorld.UI.NewMaskedTextBox.LoadViewState(System.Object)">
            <summary>
            Overrides LoadViewState.
            </summary>
            <param name="savedState"></param>
        </member>
        <member name="M:eWorld.UI.NewMaskedTextBox.SaveViewState">
            <summary>
            Overrides SaveViewState.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eWorld.UI.NewMaskedTextBox.TrackViewState">
            <summary>
            Overrides TrackViewState.
            </summary>
        </member>
        <member name="M:eWorld.UI.NewMaskedTextBox.GetRawText">
            <summary>
            This method will take the text and remove all non alpha-numeric characters from the string.
            </summary>
            <returns>The formatted string containing all alpha-numeric charachters.</returns>
        </member>
        <member name="M:eWorld.UI.NewMaskedTextBox.ApplyMask(System.String)">
            <summary>
            Applies the mask to the current text in the textbox.
            </summary>
        </member>
        <member name="E:eWorld.UI.NewMaskedTextBox.TextChanged">
            <summary>
            This is the event that fires whenever the selected date has changed in the control 
            from the particular post backs.
            </summary>
        </member>
        <member name="P:eWorld.UI.NewMaskedTextBox.Text">
            <summary>
            Gets or sets the value of the textbox.
            </summary>
        </member>
        <member name="P:eWorld.UI.NewMaskedTextBox.StrippedText">
            <summary>
            Gets the entered text without the mask.
            </summary>
        </member>
        <member name="P:eWorld.UI.NewMaskedTextBox.MaxLength">
            <summary>
            Gets or sets the maximum length for the textbox.
            </summary>
        </member>
        <member name="P:eWorld.UI.NewMaskedTextBox.Mask">
            <summary>
            Gets or sets the mask for this textbox, in which the client must abide by.
            </summary>
        </member>
        <member name="P:eWorld.UI.NewMaskedTextBox.Validate">
            <summary>
            Gets or sets a value indicating if this masked control will need to add a regular expressions validator.
            </summary>
        </member>
        <member name="P:eWorld.UI.NewMaskedTextBox.ValidationExpression">
            <summary>
            Gets or sets the validation expression to use with regular expressions validator.
            </summary>
        </member>
        <member name="P:eWorld.UI.NewMaskedTextBox.ErrorMessage">
            <summary>
            Gets or sets the error message that is displayed to the user.
            </summary>
        </member>
        <member name="P:eWorld.UI.NewMaskedTextBox.ErrorText">
            <summary>
            Gets or sets the error text that is displayed to the user. If empty, it takes on the value of <see cref="P:eWorld.UI.NewMaskedTextBox.ErrorMessage"/>.
            </summary>
        </member>
        <member name="P:eWorld.UI.NewMaskedTextBox.AutoPostBack">
            <summary>
            Gets or sets a value indicating if the masked textbox will auto postback.
            </summary>
        </member>
        <member name="P:eWorld.UI.NewMaskedTextBox.AutoFillMask">
            <summary>
            Gets and sets a value idicating if you wish the non numeric or character data will be entered automatically.
            </summary>
        </member>
        <member name="P:eWorld.UI.NewMaskedTextBox.ReadOnly">
            <summary>
            Gets and sets a value indicating if the text is read-only in the textbox.
            </summary>
        </member>
        <member name="P:eWorld.UI.NewMaskedTextBox.UseExternalResource">
            <summary>
            Gets and Sets a value indicating if the external resource javascript file is used instead of inline Javascript.
            </summary>
        </member>
        <member name="P:eWorld.UI.NewMaskedTextBox.ExternalResourcePath">
            <summary>
            Gets and Sets the path to the external resource javascript file.
            </summary>
        </member>
        <member name="P:eWorld.UI.NewMaskedTextBox.IsRequired">
            <summary>
            Gets and Sets a value indicating if a required field validator is added.
            </summary>
        </member>
        <member name="P:eWorld.UI.NewMaskedTextBox.RequiredErrorMessage">
            <summary>
            Gets and Sets the required field validator error message.
            </summary>
        </member>
        <member name="P:eWorld.UI.NewMaskedTextBox.RequiredErrorText">
            <summary>
            Gets and Sets the required field validator error text.
            </summary>
        </member>
        <member name="P:eWorld.UI.NewMaskedTextBox.ValidatorStyle">
            <summary>
            Gets the style of the regular expression and required field validators.
            </summary>
        </member>
        <member name="P:eWorld.UI.NewMaskedTextBox.ClientID">
            <summary>
            Overriden. Gets the client id of the textbox.
            </summary>
        </member>
        <member name="T:eWorld.UI.Design.NewMaskedTextBoxDesigner">
            <summary>
            Design time control for the Masked Textbox
            </summary>
        </member>
        <member name="M:eWorld.UI.Design.NewMaskedTextBoxDesigner.GetDesignTimeHtml">
            <summary>
            This will build the html designer view of the numeric box control.
            </summary>
            <returns>The html generated for the numeric box control.</returns>
        </member>
        <member name="T:eWorld.UI.NumericBox">
            <summary>
            The Numeric Box control is an easy to use, multi-browser control that will
            allow you to easily add numerical text boxes to your web forms.  It uses javascript
            to determine if the character being entered in is a valid character.
            </summary>
            /// <remarks>
            Use the <b>Numeric Box</b> control to display a single text box that allows your
            client to only enter numerical data.  It is cross-browser enabled, except for Netscape 4 and
            below.  A user with this type of browser has no limitations on what they can supply, but
            when the data is posted back to the server, it is cleaned up and properly formatted.
            </remarks>
            <example>
            <code><![CDATA[
            <%@ Register TagPrefix="eworld" Assembly="eWorld.UI, Version=1.9.0.0, Culture=neutral, PublicKeyToken=24d65337282035f2" Namespace="eWorld.UI"" %>
            <html>
            <head>
            
            </head>
            <body>
            	<form runat="server">
            		<eworld:NumericBox id="numericBox1" runat="server" RealNumber="True" PositiveNumber="True"/>
            	</form>
            </body>
            </html>
            ]]></code>
            </example>
        </member>
        <member name="M:eWorld.UI.NumericBox.OnPreRender(System.EventArgs)">
            <summary>
            OVerrides <see cref="M:System.Web.UI.WebControls.TextBox.OnPreRender(System.EventArgs)"/>
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:eWorld.UI.NumericBox.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Renders this control to the output.
            </summary>
            <param name="output"> The HTML writer to write out to </param>
        </member>
        <member name="M:eWorld.UI.NumericBox.GetProperString(System.String)">
            <summary>
            Gets the parsed valid numeric string from text
            </summary>
            <param name="theText">text string</param>
            <returns>parsed valid string</returns>
        </member>
        <member name="M:eWorld.UI.NumericBox.FormatCurrency(System.String)">
            <summary>
            Formats the given value.
            </summary>
            <param name="currentValue">Value</param>
            <returns>Formatted value string</returns>
        </member>
        <member name="P:eWorld.UI.NumericBox.RealNumber">
            <summary>
            This determines if the numeric box will accept real numbers.
            </summary>
        </member>
        <member name="P:eWorld.UI.NumericBox.PositiveNumber">
            <summary>
            This determines if the numeric box will accept only positive numbers.
            </summary>
        </member>
        <member name="P:eWorld.UI.NumericBox.DecimalPlaces">
            <summary>
            Gets or sets the number of decimal places the textbox can contain.
            </summary>
        </member>
        <member name="P:eWorld.UI.NumericBox.DecimalSign">
            <summary>
            Gets or sets the decimal sign used when typing in the numeric box.
            </summary>
        </member>
        <member name="P:eWorld.UI.NumericBox.GroupingSign">
            <summary>
            Gets or sets the decimal sign used when typing in the numeric box.
            </summary>
        </member>
        <member name="P:eWorld.UI.NumericBox.TextAlign">
            <summary>
            Gets or sets the horizontal alignment of the text being displayed.
            </summary>
        </member>
        <member name="P:eWorld.UI.NumericBox.UseExternalResource">
            <summary>
            Gets and Sets a value indicating if the external resource javascript file is used instead of inline Javascript.
            </summary>
        </member>
        <member name="P:eWorld.UI.NumericBox.ExternalResourcePath">
            <summary>
            Gets and Sets the path to the external resource javascript file.
            </summary>
        </member>
        <member name="P:eWorld.UI.NumericBox.AutoFormatCurrency">
            <summary>
            Gets and Sets a value indicating if the numeric box will automatically format and unformat the value to currency.
            </summary>
        </member>
        <member name="P:eWorld.UI.NumericBox.CurrencySign">
            <summary>
            Gets and Sets the dollar sign when AutoFormatCurrency is set to true.
            </summary>
        </member>
        <member name="P:eWorld.UI.NumericBox.CurrencySignPosition">
            <summary>
            Gets and Sets the Dollar Place in which the Dollar Sign is applied.
            </summary>
        </member>
        <member name="P:eWorld.UI.NumericBox.RawText">
            <summary>
            Gets the raw text of the control without any currency formatting.
            </summary>
        </member>
        <member name="P:eWorld.UI.NumericBox.Value">
            <summary>
            Gets The value of the control.
            </summary>
        </member>
        <member name="P:eWorld.UI.NumericBox.TextMode">
            <summary>
            Overrides the original TextMode property marking it as obsolete because it is always SingleLine.
            </summary>
        </member>
        <member name="P:eWorld.UI.NumericBox.PlacesBeforeDecimal">
            <summary>
            Gets and Sets the number of places prior to the decimal place.
            </summary>
            <remarks>
            The validation built will not included this if AutoFormatCurrency = True.
            </remarks>
        </member>
        <member name="P:eWorld.UI.NumericBox.ValidationExpression">
            <summary>
            Retrieves the validation expression to be used
            </summary>
        </member>
        <member name="T:eWorld.UI.Design.NumericBoxDesigner">
            <summary>
            This is the HTML designer view for the numeric box control.
            </summary>
        </member>
        <member name="M:eWorld.UI.Design.NumericBoxDesigner.GetDesignTimeHtml">
            <summary>
            This will build the html designer view of the numeric box control.
            </summary>
            <returns>The html generated for the numeric box control.</returns>
        </member>
        <member name="T:eWorld.UI.OrderedListBoxEventHandler">
            <summary>
            This describes the event handler for when an event has been raised.
            </summary>
        </member>
        <member name="T:eWorld.UI.OrderedListBox">
            <summary>
            The OrderedListBox is a control derived from the <see cref="T:eWorld.UI.MultiTextListBox"/> control
            extending the functionality as a control to allow users to move list items up, down, and to other
            controls.
            </summary>
            <example>
            <code><![CDATA[
            <%@ Register TagPrefix="ew" Assembly="eWorld.UI, Version=1.9.0.0, Culture=neutral, PublicKeyToken=24d65337282035f2" Namespace="eWorld.UI" %>
            <html>
             <head>
             </head>
             <body>
            	<form runat="server">
            		<ew:OrderedListBox runat="server" id="OrderedListBox1">
            			<asp:ListItem value="1">One</asp:ListItem>
            			<asp:ListItem value="2">Two</asp:ListItem>
            			<asp:ListItem value="3">Three</asp:ListItem>
            		</ew:OrderedListBox>
            	</form>
             </body>
            </html>
            ]]></code>
            </example>
        </member>
        <member name="M:eWorld.UI.OrderedListBox.OnItemCopied(eWorld.UI.OrderedListBoxEventArgs)">
            <summary>
            This invokes the item copied event.  This is called whenever the item is copied to another control.
            </summary>
            <param name="e">The event arguments passed in whenever the item is moved.</param>
        </member>
        <member name="M:eWorld.UI.OrderedListBox.OnItemMoved(eWorld.UI.OrderedListBoxEventArgs)">
            <summary>
            This invokes the item moved event.  This is called whenever the item is moved.
            </summary>
            <param name="e">The event arguments passed in whenever the item is moved.</param>
        </member>
        <member name="M:eWorld.UI.OrderedListBox.OnItemEdited(eWorld.UI.OrderedListBoxEventArgs)">
            <summary>
            This invokes the item edited event.  This is called whenever the item is chosen to be edited.
            </summary>
            <param name="e">The event arguments passed in whenever the item is edited.</param>
        </member>
        <member name="M:eWorld.UI.OrderedListBox.OnItemDeleted(eWorld.UI.OrderedListBoxEventArgs)">
            <summary>
            This invokes the item deleted event. This is called whenever the item is deleted from 
            the list.
            </summary>
            <param name="e">The event arguments passed in whenever the item is deleted.</param>
        </member>
        <member name="M:eWorld.UI.OrderedListBox.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            This invokes the selected index changed event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:eWorld.UI.OrderedListBox.#ctor">
            <summary>
            Creates a new instance of the OrderedListBox
            </summary>
        </member>
        <member name="M:eWorld.UI.OrderedListBox.OnLoad(System.EventArgs)">
            <summary>
            Overidden. See <see cref="T:System.Web.UI.WebControls.WebControl"/>
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:eWorld.UI.OrderedListBox.CreateChildControls">
            <summary>
            Overidden. See <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="M:eWorld.UI.OrderedListBox.OnPreRender(System.EventArgs)">
            <summary>
            Overrides System.Web.UI.WebControls.WebControl.OnPreRender.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:eWorld.UI.OrderedListBox.SaveViewState">
            <summary>
            Overrides SaveViewState to save custom view state information.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eWorld.UI.OrderedListBox.TrackViewState">
            <summary>
            Overrides TrackViewState to track custom view state information.
            </summary>
        </member>
        <member name="M:eWorld.UI.OrderedListBox.LoadViewState(System.Object)">
            <summary>
            Overrides LoadViewState to load custom view state information.
            </summary>
            <param name="state">ViewState objects stored from overridden SaveViewState.</param>
        </member>
        <member name="M:eWorld.UI.OrderedListBox.DataBind">
            <summary>
            Overrides eWorld.UI.MultiTextListControl.DataBind
            </summary>
        </member>
        <member name="M:eWorld.UI.OrderedListBox.ItemExists(System.String,System.Boolean)">
            <summary>
            Checks to see if the value or text specified is contained within the items collection.
            </summary>
            <param name="value">The value or text of the list item to be searched for.</param>
            <param name="searchByValue">Boolean value indicating you wish to search by value or by text.</param>
            <returns>Boolean value indicating if the list item was found.</returns>
        </member>
        <member name="M:eWorld.UI.OrderedListBox.ItemExists(System.String)">
            <summary>
            Checks to see if the value or text specified is contained within the items collection.
            </summary>
            <param name="value">The value of the list item to be searched for.</param>
            <returns>Boolean value indicating if the list item was found.</returns>
        </member>
        <member name="M:eWorld.UI.OrderedListBox.SelectItemByText(System.String)">
            <summary>
            Selects a single list item that is determined by the text.  Nothing is processed if
            the text is not found.
            </summary>
            <param name="text">The text of the list item to be selected.</param>
        </member>
        <member name="M:eWorld.UI.OrderedListBox.SelectItemByValue(System.String)">
            <summary>
            Selects a single list item that is determined by the value.  Nothing is processed if
            the value is not found.
            </summary>
            <param name="value">The value of the list item to be selected.</param>
        </member>
        <member name="M:eWorld.UI.OrderedListBox.SelectItemByValue(System.String[])">
            <summary>
            Selects any number list items based on the value. If the list box is not allowing multiple selections, only the first value item in the array is used. 
            </summary>
            <param name="valueArray">A string array of the list items value fields to be selected.</param>
        </member>
        <member name="M:eWorld.UI.OrderedListBox.Sort">
            <summary>
            Sorts the items based on the <see cref="P:eWorld.UI.OrderedListBox.SortOrder"/>.
            </summary>
        </member>
        <member name="M:eWorld.UI.OrderedListBox.RaisePostBackEvent(System.String)">
            <summary>
            Implements <see cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)"/>
            </summary>
            <param name="eventArgument">The event arguments passed that are used when the event is raised.</param>
        </member>
        <member name="E:eWorld.UI.OrderedListBox.ItemCopied">
            <summary>
            This is the event that fires whenever the selected item has been copied
            to another control.
            </summary>
        </member>
        <member name="E:eWorld.UI.OrderedListBox.ItemMoved">
            <summary>
            This is the event that fires whenever the selected item has been moved within
            the control or when it has been moved to another listbox.
            </summary>
        </member>
        <member name="E:eWorld.UI.OrderedListBox.ItemEdited">
            <summary>
            This is the event that fires whenever the selected item has been chosen to be
            edited.  No processing is done within the control, it just raises the event.
            </summary>
        </member>
        <member name="E:eWorld.UI.OrderedListBox.ItemDeleted">
            <summary>
            This is the event that fires whenever the selected item has been chosen to be
            deleted. The item is removed from the list, then raises the event.
            </summary>
        </member>
        <member name="E:eWorld.UI.OrderedListBox.SelectedIndexChanged">
            <summary>
            This is the event that fires whenever the selection is changed in the listbox.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.DataMember">
            <summary>
            Gets and sets the table used for binding when a DataSet is used as a data source.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.DataSource">
            <summary>
            Gets and sets the data source used to popuplate the list with items.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.DataTextField">
            <summary>
            Gets and sets the field in the data source that provides the text of the items.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.DataTextFields">
            <summary>
            Gets and sets a comma delimited list of fields you wish to use with conjunction with the DataTextFormatString.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.DataTextFormatString">
            <summary>
            Gets and sets the text formatting string applied to the text.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.DataValueField">
            <summary>
            Gets and sets the field in the data source that provides the item value.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.Items">
            <summary>
            Gets the collection of items in the list.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.Rows">
            <summary>
            Gets and sets the number of visible rows to display.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.AutoPostBack">
            <summary>
            Gets and sets a boolean value indicating if you wish to have the control automatically post back when an item is selected.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.SelectedIndex">
            <summary>
            Gets and sets the selected index of the control.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.SelectedItem">
            <summary>
            Gets and sets the selected list item of the control.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.SelectionMode">
            <summary>
            Gets and sets the selection mode of the control.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.BorderColor">
            <summary>
            Gets and sets the border color of the list box.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.BorderStyle">
            <summary>
            Gets and sets the border style of the list box.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.BorderWidth">
            <summary>
            Gets and sets the border width of the list box.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.BackColor">
            <summary>
            Gets and sets the back color of the list box.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.UpText">
            <summary>
            Gets and sets the text displayed for the upward movement link.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.DownText">
            <summary>
            Gets and sets the text displayed for the downward movement link.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.EditText">
            <summary>
            Gets and sets the text displayed for the editing link.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.DeleteText">
            <summary>
            Gets and sets the text displayed when the for the deleting link.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.UpImageUrl">
            <summary>
            Gets and sets the image used for upward movement.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.DownImageUrl">
            <summary>
            Gets and sets the image used for downward movement.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.EditImageUrl">
            <summary>
            Gets and sets the image used for editing.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.DeleteImageUrl">
            <summary>
            Gets and sets the image used for deleting.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.MoveToControls">
            <summary>
            Gets the controls that will be allowed to move items to.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.DisplayUp">
            <summary>
            Gets and sets a boolean value indicating if the up text or image is displayed.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.DisplayDown">
            <summary>
            Gets and sets a boolean value indicating if the down text or image is displayed.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.DisplayEdit">
            <summary>
            Gets and sets a boolean value indicating if the edit text or image is displayed.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.DisplayDelete">
            <summary>
            Gets and sets a boolean value indicating if the delete text or image is displayed.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.LinkStyle">
            <summary>
            Gets and sets the style associated with the LinkButtons for movement.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.EnableClientScript">
            <summary>
            Gets and sets a boolean value indicating if most actions will not require a postback.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.UseExternalResource">
            <summary>
            Gets and Sets a value indicating if the external resource javascript file is used instead of inline Javascript.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.ExternalResourcePath">
            <summary>
            Gets and Sets the path to the external resource javascript file.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.SortOrder">
            <summary>
            Gets and Sets the sort order of the list items.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.LinkAlignment">
            <summary>
            Gets and Sets the side that the add, edit, delete, and move to control links/images will appear on.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.DisplayAsButtons">
            <summary>
            Gets and Sets a value indicating if the up, down, add, edit, and move to control links are displayed as buttons.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBox.Controls">
            <summary>
            Ovridden.  Returns the base child controls.
            </summary>
        </member>
        <member name="T:eWorld.UI.OrderedListBoxEventArgs">
            <summary>
            Event Arguments used when the MoveItem event is raised in the OrderedListBox control.
            </summary>
        </member>
        <member name="M:eWorld.UI.OrderedListBoxEventArgs.#ctor(System.Web.UI.WebControls.ListItem,eWorld.UI.OrderedListBox)">
            <summary>
            Creates a new instance of OrderedListBoxEventArgs.
            </summary>
            <param name="item">The ListItem that was moved.</param>
            <param name="listBox">The OrderedListBox that now contains the ListItem that was moved.</param>
        </member>
        <member name="P:eWorld.UI.OrderedListBoxEventArgs.Item">
            <summary>
            Gets a reference to the ListItem that was moved.
            </summary>
        </member>
        <member name="P:eWorld.UI.OrderedListBoxEventArgs.ListBoxMovedTo">
            <summary>
            Gets a reference to the OrderedListBox the item was moved to.
            </summary>
        </member>
        <member name="T:eWorld.UI.MoveToControl">
            <summary>
            This is a custom class that is used for creating links between other ordered list boxes.
            </summary>
        </member>
        <member name="M:eWorld.UI.MoveToControl.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:eWorld.UI.MoveToControl"/>.
            </summary>
            <param name="controlID">The controlID of the referencing <see cref="T:eWorld.UI.OrderedListBox"/></param>
            <param name="text">The text of the link that will be displayed.</param>
        </member>
        <member name="M:eWorld.UI.MoveToControl.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:eWorld.UI.MoveToControl"/>.
            </summary>
            <param name="controlID">The controlID of the referencing <see cref="T:eWorld.UI.OrderedListBox"/></param>
            <param name="text">The text of the ToolTip when the image is displayed</param>
            <param name="imageUrl">The location of the image to be displayed.</param>
        </member>
        <member name="M:eWorld.UI.MoveToControl.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Creates a new instance of <see cref="T:eWorld.UI.MoveToControl"/>
            </summary>
            <param name="controlID">The controlID of the referencing <see cref="T:eWorld.UI.OrderedListBox"/></param>
            <param name="text">The text of the link that will be displayed.</param>
            <param name="makeCopy">The Value indicating if the click will make a copy of the selected item.</param>
        </member>
        <member name="M:eWorld.UI.MoveToControl.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates a new instance of <see cref="T:eWorld.UI.MoveToControl"/>
            </summary>
            <param name="controlID">The controlID of the referencing <see cref="T:eWorld.UI.OrderedListBox"/></param>
            <param name="text">The text of the ToolTip when the image is displayed.</param>
            <param name="imageUrl">The location of the image to be displayed.</param>
            <param name="makeCopy">The value indicating if the click will make a copy of the selected item.</param>
        </member>
        <member name="M:eWorld.UI.MoveToControl.System#Web#UI#IStateManager#TrackViewState">
            <summary>
            Implements <see cref="M:System.Web.UI.IStateManager.TrackViewState"/>
            </summary>
        </member>
        <member name="M:eWorld.UI.MoveToControl.System#Web#UI#IStateManager#SaveViewState">
            <summary>
            Implements <see cref="M:System.Web.UI.IStateManager.SaveViewState"/>
            </summary>
        </member>
        <member name="M:eWorld.UI.MoveToControl.System#Web#UI#IStateManager#LoadViewState(System.Object)">
            <summary>
            Implements <see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)"/>
            </summary>
            <param name="state"></param>
        </member>
        <member name="P:eWorld.UI.MoveToControl.ControlID">
            <summary>
            Gets and sets the ControlID of the <see cref="T:eWorld.UI.OrderedListBox"/> that you wish to move a ListItem to.
            </summary>
        </member>
        <member name="P:eWorld.UI.MoveToControl.Text">
            <summary>
            Gets and sets the text of the text displayed for the link or on a ToolTip if an image is defined.
            </summary>
        </member>
        <member name="P:eWorld.UI.MoveToControl.ImageUrl">
            <summary>
            Gets and sets the image url of the displayed image.
            </summary>
        </member>
        <member name="P:eWorld.UI.MoveToControl.Visible">
            <summary>
            Gets and sets a boolean value indicating if this control is visible when rendered.
            </summary>
        </member>
        <member name="P:eWorld.UI.MoveToControl.MakeCopy">
            <summary>
            Gets and sets a boolean value indicating if this item will make a copy in the destination control.
            </summary>
        </member>
        <member name="P:eWorld.UI.MoveToControl.ViewState">
            <summary>
            Gets a custom view state bag for storing this controls information required for retaining state.
            </summary>
        </member>
        <member name="P:eWorld.UI.MoveToControl.System#Web#UI#IStateManager#IsTrackingViewState">
            <summary>
            Implements <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState"/>.
            </summary>
        </member>
        <member name="T:eWorld.UI.MoveToControlCollection">
            <summary>
            This is a custom collection class used for storing MoveToControl objects for the OrderedListBox.
            </summary>
        </member>
        <member name="M:eWorld.UI.MoveToControlCollection.#ctor">
            <summary>
            Creates a new instance of <see cref="T:eWorld.UI.MoveToControlCollection"/>.
            </summary>
        </member>
        <member name="M:eWorld.UI.MoveToControlCollection.Add(eWorld.UI.MoveToControl)">
            <summary>
            Adds a new <see cref="T:eWorld.UI.MoveToControl"/> to the collection.
            </summary>
            <param name="control">A new <see cref="T:eWorld.UI.MoveToControl"/> object.</param>
            <returns>The index location of the new item in the collection.</returns>
        </member>
        <member name="M:eWorld.UI.MoveToControlCollection.Add(System.String,System.String)">
            <summary>
            Adds a new <see cref="T:eWorld.UI.MoveToControl"/> to the collection.
            </summary>
            <param name="controlID"><see cref="P:eWorld.UI.MoveToControl.ControlID"/></param>
            <param name="text"><see cref="P:eWorld.UI.MoveToControl.Text"/></param>
            <returns>The index location of the new item in the collection.</returns>
        </member>
        <member name="M:eWorld.UI.MoveToControlCollection.Add(System.String,System.String,System.String)">
            <summary>
            Adds a new <see cref="T:eWorld.UI.MoveToControl"/> to the collection.
            </summary>
            <param name="controlID"><see cref="P:eWorld.UI.MoveToControl.ControlID"/></param>
            <param name="text"><see cref="P:eWorld.UI.MoveToControl.Text"/></param>
            <param name="imageUrl"><see cref="P:eWorld.UI.MoveToControl.ImageUrl"/></param>
            <returns>The index location of the new item in the collection.</returns>
        </member>
        <member name="M:eWorld.UI.MoveToControlCollection.Add(System.String,System.String,System.Boolean)">
            <summary>
            Adds a new <see cref="T:eWorld.UI.MoveToControl"/> to the collection.
            </summary>
            <param name="controlID"><see cref="P:eWorld.UI.MoveToControl.ControlID"/></param>
            <param name="text"><see cref="P:eWorld.UI.MoveToControl.Text"/></param>
            <param name="makeCopy"><see cref="P:eWorld.UI.MoveToControl.MakeCopy"/></param>
            <returns>The index location of the new item in the collection.</returns>
        </member>
        <member name="M:eWorld.UI.MoveToControlCollection.Add(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Adds a new <see cref="T:eWorld.UI.MoveToControl"/> to the collection.
            </summary>
            <param name="controlID"><see cref="P:eWorld.UI.MoveToControl.ControlID"/></param>
            <param name="text"><see cref="P:eWorld.UI.MoveToControl.Text"/></param>
            <param name="imageUrl"><see cref="P:eWorld.UI.MoveToControl.ImageUrl"/></param>
            <param name="makeCopy"><see cref="P:eWorld.UI.MoveToControl.MakeCopy"/></param>
            <returns></returns>
        </member>
        <member name="M:eWorld.UI.MoveToControlCollection.AddRange(eWorld.UI.MoveToControl[])">
            <summary>
            Adds a range of <see cref="T:eWorld.UI.MoveToControl"/> objects to the collection.
            </summary>
            <param name="controls"></param>
        </member>
        <member name="M:eWorld.UI.MoveToControlCollection.Insert(System.Int32,eWorld.UI.MoveToControl)">
            <summary>
            Inserts a <see cref="T:eWorld.UI.MoveToControl"/> object into the collection at the specified index.
            </summary>
            <param name="index">The index where to insert the control.</param>
            <param name="control">The control being inserted.</param>
        </member>
        <member name="M:eWorld.UI.MoveToControlCollection.Remove(eWorld.UI.MoveToControl)">
            <summary>
            Removes a <see cref="T:eWorld.UI.MoveToControl"/> from the collection.
            </summary>
            <param name="control">The control to be removed.</param>
        </member>
        <member name="M:eWorld.UI.MoveToControlCollection.Remove(System.String)">
            <summary>
            Removes a <see cref="T:eWorld.UI.MoveToControl"/> from the collection.
            </summary>
            <param name="controlID">The control ID to be removed from the collection.</param>
        </member>
        <member name="M:eWorld.UI.MoveToControlCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a <see cref="T:eWorld.UI.MoveToControl"/> at the specified index.
            </summary>
            <param name="index">The index of the control to be removed.</param>
        </member>
        <member name="M:eWorld.UI.MoveToControlCollection.Clear">
            <summary>
            Clears the collection of all MoveToControl items.
            </summary>
        </member>
        <member name="M:eWorld.UI.MoveToControlCollection.IndexOf(eWorld.UI.MoveToControl)">
            <summary>
            Retrieves the Index the specified control.
            </summary>
            <param name="control">The control to search for.</param>
            <returns>The index of the control.</returns>
        </member>
        <member name="M:eWorld.UI.MoveToControlCollection.IndexOf(System.String)">
            <summary>
            Retrieves the Index of a control.
            </summary>
            <param name="controlID">The controlID to search for.</param>
            <returns>The index of the control</returns>
        </member>
        <member name="M:eWorld.UI.MoveToControlCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies this collection into an array.
            </summary>
            <param name="array">Array to copy the collection to.</param>
            <param name="index">The index of the array to start at.</param>
        </member>
        <member name="M:eWorld.UI.MoveToControlCollection.System#Web#UI#IStateManager#TrackViewState">
            <summary>
            Implements <see cref="M:System.Web.UI.IStateManager.TrackViewState"/>.
            </summary>
        </member>
        <member name="M:eWorld.UI.MoveToControlCollection.System#Web#UI#IStateManager#SaveViewState">
            <summary>
            Implements <see cref="M:System.Web.UI.IStateManager.SaveViewState"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:eWorld.UI.MoveToControlCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)">
            <summary>
            Implements <see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)"/>.
            </summary>
            <param name="state">ViewState to be loaded.</param>
        </member>
        <member name="M:eWorld.UI.MoveToControlCollection.GetEnumerator">
            <summary>
            Retrieves an enumerator of the collection.
            </summary>
            <returns>An IEnumerator object.</returns>
        </member>
        <member name="M:eWorld.UI.MoveToControlCollection.Reset">
            <summary>
            Resets the  enumerator to the begining of the collection.
            </summary>
        </member>
        <member name="M:eWorld.UI.MoveToControlCollection.MoveNext">
            <summary>
            Moves the enumeration to the next item in the collection.
            </summary>
            <returns>A boolean value if successful.</returns>
        </member>
        <member name="P:eWorld.UI.MoveToControlCollection.Count">
            <summary>
            Gets the number of items located in this collection.
            </summary>
        </member>
        <member name="P:eWorld.UI.MoveToControlCollection.Item(System.Int32)">
            <summary>
            Gets a <see cref="T:eWorld.UI.MoveToControl"/> reference at the specififed index in the collection.
            </summary>
        </member>
        <member name="P:eWorld.UI.MoveToControlCollection.Item(System.String)">
            <summary>
            Gets a <see cref="T:eWorld.UI.MoveToControl"/> reference of the specified controlID.
            </summary>
        </member>
        <member name="P:eWorld.UI.MoveToControlCollection.IsSynchronized">
            <summary>
            Gets a value indicating if the collection is synchronized.
            </summary>
        </member>
        <member name="P:eWorld.UI.MoveToControlCollection.SyncRoot">
            <summary>
            Gets a value of the syncRoot.
            </summary>
        </member>
        <member name="P:eWorld.UI.MoveToControlCollection.System#Web#UI#IStateManager#IsTrackingViewState">
            <summary>
            Implements <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState"/>
            </summary>
        </member>
        <member name="P:eWorld.UI.MoveToControlCollection.Current">
            <summary>
            Retrieves the current object at the current index.
            </summary>
        </member>
        <member name="T:eWorld.UI.Design.OrderedListBoxDesigner">
            <summary>
            This is the HTML designer view for the ordered listbox control.
            </summary>
        </member>
        <member name="M:eWorld.UI.Design.OrderedListBoxDesigner.GetDesignTimeHtml">
            <summary>
            Overrides <see cref="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml"/>
            </summary>
            <returns>Generated HTML for the designer.</returns>
        </member>
        <member name="M:eWorld.UI.Design.OrderedListBoxDesigner.GetErrorDesignTimeHtml(System.Exception)">
            <summary>
            Overrides <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)"/>
            </summary>
            <param name="e">The exception.</param>
            <returns>The formatted error message.</returns>
        </member>
        <member name="T:eWorld.UI.TimeChangedEventHandler">
            <summary>
            This describes the event handler for when the selected time has changed.
            </summary>
        </member>
        <member name="T:eWorld.UI.TimePicker">
            <summary>
            The Time Picker control is an easy to use, multi-browser control that will
            allow you to easily add date selection to your web forms.  For DHTML enabled browsers
            (Internet Explorer 5+ and Netscape 6+), the calendar is displayed within the current window.
            For non DHTML enabled browsers (Internet Explorer 4 and Netscape 4), the calendar is displayed 
            in a new window.  Both calendars are dynamically generated by Javascript and displayed.
            </summary>
            <remarks>
            Use the <b>Time Picker</b> control to display a range of dates that are selectable via a DHTML based (NS5+ and IE5+)
            container.  This fully customizable display allows you to set a range of times to select from, restrict displaying
            unselectable times, allows for time interval variations, and fully style-able display.
            <br/>
            By default the control displays the a textbox and button.  If the client is using a newer browser that
            allows for DHTML, a time picker layer will be displayed once the button is clicked.  If the client is using
            a non-supported browser, a new window will open containing the times.
            </remarks>
            <example>
            <code><![CDATA[
            <%@ Register TagPrefix="ew" Assembly="eWorld.UI, Version=1.9.0.0, Culture=neutral, PublicKeyToken=24d65337282035f2" Namespace="eWorld.UI" %>
            <html>
             <head>
             </head>
             <body>
            	<form runat="server">
            		<ew:TimePicker id="timePicker1" runat="server" ControlDisplay="TextboxImage" Text="Change Time" ImageUrl="images/clock.gif" NumberOfColumns="6" Scrollable="True">
            			<TimeStyle ForeColor="Black" BackColor="White" />
            			<SelectedTimeStyle ForeColor="Blue" BackColor="Gray" />
            		</ew:TimePicker>
            	</form>
             </body>
            </html>
            ]]></code>
            </example>
        </member>
        <member name="M:eWorld.UI.TimePicker.CreateChildControls">
            <summary>
            Overridden. Adds custom logic to create time picker.
            </summary>
        </member>
        <member name="M:eWorld.UI.TimePicker.TrackViewState">
            <summary>
            Overriden. Tracks viewstate for custom properties.
            </summary>
        </member>
        <member name="M:eWorld.UI.TimePicker.LoadViewState(System.Object)">
            <summary>
            Overridden. Loads viewstate for custom properties.
            </summary>
            <param name="savedState">The saved view state to load.</param>
        </member>
        <member name="M:eWorld.UI.TimePicker.SaveViewState">
            <summary>
            Overridden. Saves the viewstate for custom properties.
            </summary>
            <returns>The saved viewstate.</returns>
        </member>
        <member name="M:eWorld.UI.TimePicker.OnPreRender(System.EventArgs)">
            <summary>
            Overridden. Does custom logic for creating the TimePicker control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:eWorld.UI.TimePicker.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Overrides <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)"/>
            </summary>
            <param name="output"><see cref="T:System.Web.UI.HtmlTextWriter"/> object of the current controls html output.</param>
        </member>
        <member name="M:eWorld.UI.TimePicker.OnTimeChanged(System.EventArgs)">
            <summary>
            This invokes the time changed event.  This is called whenever the time is changed.
            </summary>
            <param name="e">The event arguments passed in whenever the time has changed.</param>
        </member>
        <member name="M:eWorld.UI.TimePicker.OnCommand(System.Web.UI.WebControls.CommandEventArgs)">
            <summary>
            This invokes the command event.
            </summary>
            <param name="e">The command event arguments passed in whenever the the command has been fired.</param>
        </member>
        <member name="M:eWorld.UI.TimePicker.Clear">
            <summary>
            Clears the selected time if the control is nullable.
            </summary>
        </member>
        <member name="M:eWorld.UI.TimePicker.Reset">
            <summary>
            This resets the controls SelectedTime property to the current time.
            </summary>
        </member>
        <member name="M:eWorld.UI.TimePicker.Reset(System.DateTime)">
            <summary>
            This resets the controls SelectedTime property to the passed in date and time.
            </summary>
            <param name="resetTime">The time to reset the control to.</param>
        </member>
        <member name="M:eWorld.UI.TimePicker.RaisePostDataChangedEvent">
            <summary>
            Implements <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent"/>.
            </summary>
        </member>
        <member name="M:eWorld.UI.TimePicker.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Implements <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)"/>.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.ControlDisplay">
            <summary>
            Gets and Sets how the control is rendered.
            </summary>
            <remarks>
            The default value is TextBoxButton
            </remarks>
        </member>
        <member name="P:eWorld.UI.TimePicker.SelectedTime">
            <summary>
            Gets and Sets the selected time.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.LowerBoundTime">
            <summary>
            Gets and Sets the lower bound time avaliable for selection.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.UpperBoundTime">
            <summary>
            Gets and Sets the upper bound time avaliable for selection.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.MinuteInterval">
            <summary>
            Gets and Sets the time interval between the times that are listed.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.Culture">
            <summary>
            Gets and Sets the culture of the displayed times.
            </summary>
            <value>
            The default culture is the client culture upon visit to the page.
            </value>
        </member>
        <member name="P:eWorld.UI.TimePicker.Nullable">
            <summary>
            Gets and Sets a value indicating if the control can allow null/empty values.
            </summary>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:eWorld.UI.TimePicker.ClearTimeText">
            <summary>
            Gets and Sets the clear time text that is displayed.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.ShowClearTimeText">
            <summary>
            Gets and Sets a value indicating if the ClearTimeText is displayed.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.ImageUrl">
            <summary>
            Gets and Sets the image url for when the control is used with LabelImage or TextBoxImage
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.CellPadding">
            <summary>
            Gets and Sets the cellpadding of the popup time picker.
            </summary>
            <value>
            The default value of this property is 2.
            </value>
        </member>
        <member name="P:eWorld.UI.TimePicker.CellSpacing">
            <summary>
            Gets and Sets the cellspacing of the popup time picker.
            </summary>
            <value>
            The default value of this property is 0.
            </value>
        </member>
        <member name="P:eWorld.UI.TimePicker.Text">
            <summary>
            Gets and Sets the text of the button or tool tip for opening the popup time picker.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.EnableHideDropDown">
            <summary>
            Gets and Sets a value indicating if drop-down lists will be hidden when the popop time picker is displayed.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.PopupLocation">
            <summary>
            Gets and Sets the location of the popup time picker.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.DisableTextboxEntry">
            <summary>
            Gets and Sets a value indicating if the user is allowed to type in the textbox.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.EnableLooseFocus">
            <summary>
            Gets and Sets a value indicating if upon clicking anywhere in the browser, the popup time picker is closed
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.NetscapeWindowHeight">
            <summary>
            Gets or sets a value indicating the height of the popup window for unsupported (Netscape 4) browsers.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.NetscapeWindowWidth">
            <summary>
            Gets or sets a value indicating the width of the popup window for unsupported (Netscape 4) browsers.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.NetscapeStyleSheetLocation">
            <summary>
            Gets and sets the stylesheet location used for unsupported (Netscape 4) browsers.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.DisplayOffsetX">
            <summary>
            Gets or sets the display offset of the x axis for the popup time picker in terms of pixels.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.DisplayOffsetY">
            <summary>
            Gets or sets the display offset of the y axis for the popup time picker in terms of pixels.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.DisabledEntryDisplayAction">
            <summary>
            Gets or sets the display action taken when DisabledTextboxEntry is true.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.TextboxLabelStyle">
            <summary>
            Gets and Sets the style of the textbox or label.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.ButtonStyle">
            <summary>
            Gets and Sets the style of the button when displayed as TextboxButton or LabelButton
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.SelectedTimeStyle">
            <summary>
            Gets and Sets the style of the selected time in the popup time picker
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.TimeStyle">
            <summary>
            Gets and Sets the style of the times in the popup time picker
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.ClearTimeStyle">
            <summary>
            Gets and Sets the style of the clear time text in the popup time picker
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.Enabled">
            <summary>
            Gets and Sets a value indicating if this control is enabled.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.NumberOfColumns">
            <summary>
            Gets and Sets the number of columns that are displayed in the time picker popup
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.PopupHeight">
            <summary>
            Gets and Sets the height of the time picker popup when scrollable is true
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.PopupWidth">
            <summary>
            Gets and Sets the width of the time picker popup when scrollable is true
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.Scrollable">
            <summary>
            Gets and Sets a value indicating if the time picker popup will scroll
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.DisplayUnselectableTimes">
            <summary>
            Gets and Sets a value indicating if times falling outside of the lower bound and upper bound times will be displayed.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.AutoPostBack">
            <summary>
            Gets and Sets a value indicating if the control will automatically postback once a time is selected.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.PostedTime">
            <summary>
            Gets the posted time after a postback.  Used for validation.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.Height">
            <summary>
            Gets and sets the height of the textbox and button.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.Width">
            <summary>
            Gets and sets the width of the textbox.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.ForcePopup">
            <summary>
            Gets and Sets a value indicating if a new window will popup for DHTML enabled browsers.
            </summary>
            <remarks>
            All time pickers on the page must have the same value for this property.
            </remarks>
        </member>
        <member name="P:eWorld.UI.TimePicker.UseExternalResource">
            <summary>
            Gets and Sets a value indicating if the external resource javascript file is used instead of inline Javascript.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.ExternalResourcePath">
            <summary>
            Gets and Sets the path to the external resource javascript file.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.RoundUpMinutes">
            <summary>
            Gets and Sets a value which indicates if the minutes are rounded up to the next minute interval.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.MilitaryTime">
            <summary>
            Gets and Sets a value indicating if the time is represented in military time.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.CommandName">
            <summary>
            Gets and Sets the command name associated with the <see cref="T:eWorld.UI.TimePicker"/> control that is passed to the Command event.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.CommandArgument">
            <summary>
            Gets and Sets an optional parameter passed to the Command event along with the associated CommandName.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.NullableLabelText">
            <summary>
            Gets and Sets the text displayed for the label when it is nulled out.
            </summary>
        </member>
        <member name="P:eWorld.UI.TimePicker.JavascriptOnChangeFunction">
            <summary>
            Gets and Sets the custom javascript function that will be called when a time has been selected.
            </summary>
            <remarks>
            The function must take in 2 parameters. (1) is the selected time, type string. (2) is the textbox or hidden fields id.
            </remarks>
        </member>
        <member name="E:eWorld.UI.TimePicker.TimeChanged">
            <summary>
            This is the event that fires whenever the selected time has changed in the control 
            from the particular post backs.
            </summary>
        </member>
        <member name="E:eWorld.UI.TimePicker.Command">
            <summary>
            This is the event that fires whenever a command has taken place in the control.
            </summary>
        </member>
        <member name="T:eWorld.UI.Design.TimePickerDesigner">
            <summary>
            This is the HTML designer view for the time picker control.
            </summary>
        </member>
        <member name="M:eWorld.UI.Design.TimePickerDesigner.GetDesignTimeHtml">
            <summary>
            This will build the html designer view of the time picker control
            dependant on the current control being created.
            </summary>
            <returns>The html generated for the time picker control.</returns>
        </member>
    </members>
</doc>
